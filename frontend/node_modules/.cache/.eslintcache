[{"C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\index.js":"1","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\App.js":"3","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\components\\Header.js":"4","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\components\\Footer.js":"5","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\screens\\HomeScreen.js":"6","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\components\\Product.js":"7","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\components\\Rating.js":"8","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\screens\\ProductScreen.js":"9","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\components\\Message.js":"10","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\components\\BlogPost.js":"11","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\components\\PillarCarousel.js":"12","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\actions\\blogActions.js":"13","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\constants\\blogConstants.js":"14","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\components\\Loader.js":"15","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\store.js":"16","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\reducers\\blogReducers.js":"17","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\reducers\\productReducers.js":"18","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\constants\\productConstants.js":"19","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\reducers\\userReducers.js":"20","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\screens\\LoginScreen.js":"21","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\screens\\CartScreen.js":"22","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\screens\\RegisterScreen.js":"23","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\constants\\userConstants.js":"24","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\components\\FormContainer.js":"25","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\reducers\\cartReducers.js":"26","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\constants\\cartConstants.js":"27","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\actions\\userActions.js":"28","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\actions\\productActions.js":"29","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\actions\\cartActions.js":"30","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\screens\\ProfileScreen.js":"31","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\reducers\\orderReducers.js":"32","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\constants\\orderConstants.js":"33","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\actions\\orderActions.js":"34","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\screens\\ShopScreen.js":"35","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\components\\Paginate.js":"36","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\screens\\BlogScreen.js":"37","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\screens\\ShippingScreen.js":"38","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\components\\CheckoutSteps.js":"39","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\screens\\UserListScreen.js":"40","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\screens\\UserEditScreen.js":"41","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\screens\\ProductListScreen.js":"42","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\screens\\ProductEditScreen.js":"43","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\screens\\OrderListScreen.js":"44","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\screens\\AboutScreen.js":"45","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\screens\\ContactScreen.js":"46","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\screens\\PortalScreen.js":"47","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\components\\Container.js":"48","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\components\\BlogScreenBlogPosts.js":"49","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\screens\\SingleBlogScreen.js":"50","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\components\\DispatchLogout.js":"51","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\components\\HorizontalCarousel.js":"52","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\components\\TopProductsCarousel.js":"53","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\screens\\OrderPayScreen.js":"54","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\screens\\OrderReviewScreen.js":"55","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\components\\CheckoutForm.js":"56","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\components\\BlogContainer.js":"57"},{"size":705,"mtime":1646849536205,"results":"58","hashOfConfig":"59"},{"size":362,"mtime":499162500000,"results":"60","hashOfConfig":"59"},{"size":3700,"mtime":1647819626519,"results":"61","hashOfConfig":"59"},{"size":4853,"mtime":1647784391534,"results":"62","hashOfConfig":"59"},{"size":1749,"mtime":1641367609060,"results":"63","hashOfConfig":"59"},{"size":3598,"mtime":1647784064171,"results":"64","hashOfConfig":"59"},{"size":1018,"mtime":1647097248072,"results":"65","hashOfConfig":"59"},{"size":1790,"mtime":1647784476319,"results":"66","hashOfConfig":"59"},{"size":9234,"mtime":1647784754051,"results":"67","hashOfConfig":"59"},{"size":269,"mtime":1638903846053,"results":"68","hashOfConfig":"59"},{"size":7278,"mtime":1647783854964,"results":"69","hashOfConfig":"59"},{"size":1296,"mtime":1641367632458,"results":"70","hashOfConfig":"59"},{"size":6426,"mtime":1647556157215,"results":"71","hashOfConfig":"59"},{"size":1624,"mtime":1641368326925,"results":"72","hashOfConfig":"59"},{"size":418,"mtime":1640371108485,"results":"73","hashOfConfig":"59"},{"size":3369,"mtime":1647788671635,"results":"74","hashOfConfig":"59"},{"size":4071,"mtime":1648254052698,"results":"75","hashOfConfig":"59"},{"size":3660,"mtime":1646080539831,"results":"76","hashOfConfig":"59"},{"size":1496,"mtime":1642654171967,"results":"77","hashOfConfig":"59"},{"size":4957,"mtime":1648254314953,"results":"78","hashOfConfig":"59"},{"size":2430,"mtime":1646852699401,"results":"79","hashOfConfig":"59"},{"size":5666,"mtime":1648136228672,"results":"80","hashOfConfig":"59"},{"size":3421,"mtime":1646853024420,"results":"81","hashOfConfig":"59"},{"size":2532,"mtime":1647796442097,"results":"82","hashOfConfig":"59"},{"size":352,"mtime":1640371262070,"results":"83","hashOfConfig":"59"},{"size":1427,"mtime":1641932157064,"results":"84","hashOfConfig":"59"},{"size":536,"mtime":1641932161107,"results":"85","hashOfConfig":"59"},{"size":8501,"mtime":1648001675176,"results":"86","hashOfConfig":"59"},{"size":5658,"mtime":1646276606583,"results":"87","hashOfConfig":"59"},{"size":2551,"mtime":1647731249492,"results":"88","hashOfConfig":"59"},{"size":10993,"mtime":1648435226595,"results":"89","hashOfConfig":"59"},{"size":3741,"mtime":1647887143513,"results":"90","hashOfConfig":"59"},{"size":1630,"mtime":1647884006127,"results":"91","hashOfConfig":"59"},{"size":5584,"mtime":1648139610346,"results":"92","hashOfConfig":"59"},{"size":1537,"mtime":1646853049227,"results":"93","hashOfConfig":"59"},{"size":804,"mtime":1646082283507,"results":"94","hashOfConfig":"59"},{"size":8372,"mtime":1647784019406,"results":"95","hashOfConfig":"59"},{"size":7653,"mtime":1647916114924,"results":"96","hashOfConfig":"59"},{"size":1365,"mtime":1647879037756,"results":"97","hashOfConfig":"59"},{"size":3974,"mtime":1647784312964,"results":"98","hashOfConfig":"59"},{"size":3803,"mtime":1646853061448,"results":"99","hashOfConfig":"59"},{"size":4626,"mtime":1646954348346,"results":"100","hashOfConfig":"59"},{"size":7179,"mtime":1646852964563,"results":"101","hashOfConfig":"59"},{"size":6483,"mtime":1646852715444,"results":"102","hashOfConfig":"59"},{"size":4229,"mtime":1646852612680,"results":"103","hashOfConfig":"59"},{"size":3042,"mtime":1647397485086,"results":"104","hashOfConfig":"59"},{"size":1786,"mtime":1647784248959,"results":"105","hashOfConfig":"59"},{"size":170,"mtime":1646593648669,"results":"106","hashOfConfig":"59"},{"size":6689,"mtime":1647784375701,"results":"107","hashOfConfig":"59"},{"size":1949,"mtime":1648135458314,"results":"108","hashOfConfig":"59"},{"size":307,"mtime":1647095458127,"results":"109","hashOfConfig":"110"},{"size":2134,"mtime":1647141468649,"results":"111","hashOfConfig":"59"},{"size":1765,"mtime":1647784404107,"results":"112","hashOfConfig":"59"},{"size":8218,"mtime":1648139559279,"results":"113","hashOfConfig":"59"},{"size":7805,"mtime":1648435246535,"results":"114","hashOfConfig":"59"},{"size":2529,"mtime":1648139579015,"results":"115","hashOfConfig":"59"},{"size":173,"mtime":1648135131897,"results":"116","hashOfConfig":"59"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"burgug",{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184"},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212"},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","suppressedMessages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234"},{"filePath":"235","messages":"236","suppressedMessages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","suppressedMessages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","suppressedMessages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","suppressedMessages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"247","messages":"248","suppressedMessages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","suppressedMessages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","suppressedMessages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","suppressedMessages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","suppressedMessages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","suppressedMessages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"265","messages":"266","suppressedMessages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"268","messages":"269","suppressedMessages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hq4bss",{"filePath":"273","messages":"274","suppressedMessages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"276","messages":"277","suppressedMessages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","suppressedMessages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282"},{"filePath":"283","messages":"284","suppressedMessages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"286","messages":"287","suppressedMessages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289"},{"filePath":"290","messages":"291","suppressedMessages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\index.js",[],[],"C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\App.js",[],[],"C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\components\\Header.js",[],[],"C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\components\\Footer.js",[],[],"C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\screens\\HomeScreen.js",[],[],"C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\components\\Product.js",[],[],"C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\components\\Rating.js",[],[],"C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\screens\\ProductScreen.js",["293"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  Image,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  ListGroup,\r\n  Form,\r\n  Button,\r\n  ListGroupItem,\r\n} from \"react-bootstrap\";\r\nimport Container from \"../components/Container\";\r\nimport Rating from \"../components/Rating\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { createReview, getProductDetails } from \"../actions/productActions\";\r\nimport { addItemToCart } from \"../actions/cartActions\";\r\nimport { ADD_CART_RESET } from \"../constants/cartConstants\";\r\nconst ProductScreen = () => {\r\n  const [comment, setComment] = useState(\"\");\r\n  const [rating, setRating] = useState(0);\r\n  const [options, setOptions] = useState(\"\");\r\n  const [qty, setQty] = useState(1);\r\n  const [message, setMessage] = useState(\"\");\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  const productReview = useSelector((state) => state.productReview);\r\n  const { error: errorReview, success: reviewSuccess } = productReview;\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n  const cartAdd = useSelector((state) => state.cartAdd);\r\n  const { error: cartError, success } = cartAdd;\r\n\r\n  useEffect(() => {\r\n    dispatch(getProductDetails(id));\r\n    if (reviewSuccess) {\r\n      dispatch(getProductDetails(id));\r\n    }\r\n    if (cartError) {\r\n      setMessage(\r\n        `There was a problem adding ${product.name} to your cart. Try again or check if you are logged in.`\r\n      );\r\n      setTimeout(() => {\r\n        setMessage(false);\r\n        dispatch({ type: ADD_CART_RESET });\r\n      }, 3000);\r\n    }\r\n  }, [dispatch, cartError, reviewSuccess, product.name, id]);\r\n\r\n  const addToCartHandler = () => {\r\n    if (product.optionName && !options) {\r\n      setMessage(`Please select ${product.optionName}`);\r\n      setTimeout(() => {\r\n        setMessage(false);\r\n      }, 5000);\r\n    } else {\r\n      dispatch(\r\n        addItemToCart(\r\n          product.name,\r\n          product.price,\r\n          product.image,\r\n          product._id,\r\n          qty,\r\n          options,\r\n          product.optionName\r\n        )\r\n      );\r\n      setMessage(`${product.name} has been added to your cart.`);\r\n      setTimeout(() => {\r\n        setMessage(false);\r\n      }, 3500);\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(createReview(id, rating, comment));\r\n    setComment(\"\");\r\n    setRating(0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Link to=\"/shop\" type=\"button\" className=\"btn btn-dark my-3\">\r\n          Back\r\n        </Link>\r\n        {message && <Message variant=\"info\">{message}</Message>}\r\n        {loading && <Loader />}\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        {product && (\r\n          <>\r\n            <Row className=\"d-flex \">\r\n              <Col md={5}>\r\n                <Image\r\n                  src={product.image}\r\n                  alt={product.name}\r\n                  className=\"mb-3\"\r\n                  fluid\r\n                />\r\n                <Rating\r\n                  value={product.rating}\r\n                  text={`${product.numReviews} reviews`}\r\n                />{\" \"}\r\n              </Col>\r\n\r\n              <Col md={4}>\r\n                <Card>\r\n                  <Card.Body>\r\n                    <Card.Title>\r\n                      <h2> {product.name}</h2>\r\n                    </Card.Title>\r\n                    <Card.Subtitle className=\"mb-2\">\r\n                      <h4>${product.price}</h4>\r\n                    </Card.Subtitle>\r\n                    <Card.Text>{product.description}</Card.Text>\r\n                  </Card.Body>\r\n                  <ListGroupItem>\r\n                    <Row className=\"mt-2 align-items-center\">\r\n                      <Col md={5}>\r\n                        <strong>Status:</strong>{\" \"}\r\n                        {product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"}\r\n                      </Col>\r\n                      {product.optionName && (\r\n                        <Col md={7} className=\"d-flex align-items-center\">\r\n                          <strong className=\"mx-1\">{`${product.optionName}: `}</strong>\r\n\r\n                          <Form.Control\r\n                            className=\"m-0\"\r\n                            value={options}\r\n                            as=\"select\"\r\n                            onChange={(e) => setOptions(e.target.value)}\r\n                          >\r\n                            <option value=\"caution\">Select a Value</option>\r\n                            {product.options.map((o) => (\r\n                              <option key={o++} value={o}>\r\n                                {o}\r\n                              </option>\r\n                            ))}\r\n                          </Form.Control>\r\n                        </Col>\r\n                      )}\r\n                    </Row>\r\n                    <Row className=\"my-3 align-items-center\">\r\n                      <Col className=\"d-flex align-items-center\" md={5}>\r\n                        <strong className=\"mx-1\">Qty:</strong>{\" \"}\r\n                        <Form.Control\r\n                          className=\"m-0\"\r\n                          as=\"select\"\r\n                          value={qty}\r\n                          onChange={(e) => setQty(e.target.value)}\r\n                        >\r\n                          {[...Array(product.countInStock).keys()].map((x) => (\r\n                            <option key={x + 1} value={x + 1}>\r\n                              {x + 1}\r\n                            </option>\r\n                          ))}\r\n                        </Form.Control>\r\n                      </Col>\r\n                      <Col md={7}>\r\n                        <Button\r\n                          className=\"btn btn-dark w-100\"\r\n                          onClick={addToCartHandler}\r\n                          disabled={product.countInStock === 0}\r\n                        >\r\n                          Add To Cart\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroupItem>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md={7}>\r\n                <h2 className=\"my-3\">Reviews</h2>\r\n                {product.reviews.length === 0 ? (\r\n                  <Message variant=\"info\">No Reviews</Message>\r\n                ) : (\r\n                  product.reviews.map((review) => (\r\n                    <ListGroup.Item key={review._id}>\r\n                      <Row className=\"justify-space-between\">\r\n                        <strong>{review.name}</strong>\r\n                        <Rating value={review.rating} />\r\n                      </Row>\r\n                      <p>{review.createdAt.substring(0, 10)}</p>\r\n                      <p>{review.comment}</p>\r\n                    </ListGroup.Item>\r\n                  ))\r\n                )}\r\n                <ListGroup.Item>\r\n                  <h2>Write a Customer Review</h2>\r\n                  {errorReview && (\r\n                    <Message variant=\"danger\">{errorReview}</Message>\r\n                  )}\r\n                  {userInfo ? (\r\n                    <Form onSubmit={submitHandler}>\r\n                      <Form.Group controlId=\"rating\">\r\n                        <Form.Label>Rating</Form.Label>\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          value={rating}\r\n                          onChange={(e) => setRating(e.target.value)}\r\n                        >\r\n                          <option value=\"\">Select...</option>\r\n                          <option value=\"1\">1 - Poor</option>\r\n                          <option value=\"2\">2 - Fair</option>\r\n                          <option value=\"3\">3 - Good</option>\r\n                          <option value=\"4\">4 - Very Good</option>\r\n                          <option value=\"5\">5 - Excellent</option>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group controlId=\"comment\">\r\n                        <Form.Label>Comment</Form.Label>\r\n                        <Form.Control\r\n                          as=\"textarea\"\r\n                          row=\"3\"\r\n                          value={comment}\r\n                          onChange={(e) => setComment(e.target.value)}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Button type=\"submit\" variant=\"secondary\">\r\n                        Submit Review\r\n                      </Button>\r\n                    </Form>\r\n                  ) : (\r\n                    <Message>\r\n                      Please <Link to=\"/login\">sign in</Link> to write a review\r\n                    </Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </Col>\r\n            </Row>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\components\\Message.js",[],[],"C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\components\\BlogPost.js",[],[],"C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\components\\PillarCarousel.js",[],[],"C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\actions\\blogActions.js",[],[],"C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\constants\\blogConstants.js",[],[],"C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\components\\Loader.js",[],[],"C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\store.js",[],[],"C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\reducers\\blogReducers.js",[],[],"C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\reducers\\productReducers.js",[],[],"C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\constants\\productConstants.js",[],[],"C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\reducers\\userReducers.js",[],[],"C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\screens\\LoginScreen.js",[],[],"C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\screens\\CartScreen.js",["294"],[],"import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Col, Row, Button, Image, ListGroup, Card } from \"react-bootstrap\";\r\nimport Container from \"../components/Container\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { getCart, controlCart } from \"../actions/cartActions\";\r\nimport { logout } from \"../actions/userActions\";\r\n\r\nconst CartScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const cartGet = useSelector((state) => state.cartGet);\r\n  const { cartItems, loading, error } = cartGet;\r\n\r\n  const cartControl = useSelector((state) => state.cartControl);\r\n  const { success } = cartControl;\r\n\r\n  useEffect(() => {\r\n    dispatch(getCart());\r\n\r\n    if (!userInfo) {\r\n      dispatch(logout());\r\n      navigate(\"/login\");\r\n    }\r\n\r\n    if (success) {\r\n      dispatch(getCart());\r\n    }\r\n  }, [dispatch, navigate, userInfo, success]);\r\n\r\n  const checkoutHandler = () => {\r\n    navigate(\"/shipping\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <h1>Shopping Cart</h1>\r\n        {loading && <Loader />}\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        {cartItems && cartItems.length > 0 && (\r\n          <Row>\r\n            <Col md={9}>\r\n              <Card>\r\n                <ListGroup variant=\"flush\">\r\n                  {cartItems.map((item) => (\r\n                    <ListGroup.Item key={item._id}>\r\n                      <Row className=\"d-flex justify-content-between align-items-center\">\r\n                        <Col md={2}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                            sm={1}\r\n                          />\r\n                        </Col>\r\n                        <Col md={2}>\r\n                          <Link to={`/product/${item.productId}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={1}>${item.price}</Col>\r\n                        <Col md={1}>\r\n                          <Row className=\"d-flex justify-content-center align-items-center\">\r\n                            <Col md={1}>{item.qty}</Col>\r\n\r\n                            <Col md={1}>\r\n                              {\" \"}\r\n                              <Button\r\n                                variant=\"link\"\r\n                                onClick={() =>\r\n                                  dispatch(controlCart(item._id, \"up\"))\r\n                                }\r\n                              >\r\n                                <i className=\"fas fa-sort-up\"></i>\r\n                              </Button>{\" \"}\r\n                              <Button\r\n                                variant=\"link\"\r\n                                onClick={() =>\r\n                                  dispatch(controlCart(item._id, \"down\"))\r\n                                }\r\n                              >\r\n                                <i className=\"fas fa-sort-down\"></i>\r\n                              </Button>\r\n                            </Col>\r\n                          </Row>\r\n                        </Col>\r\n                        <Col className=\"d-flex justify-content-center\" md={2}>\r\n                          ${item.totalPrice.toFixed(2)}\r\n                        </Col>\r\n                        <Col md={1}>\r\n                          {\" \"}\r\n                          <Button\r\n                            onClick={() =>\r\n                              dispatch(controlCart(item._id, \"trash\"))\r\n                            }\r\n                          >\r\n                            <i className=\"fas fa-trash-alt\"></i>\r\n                          </Button>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n\r\n            <Col md={3}>\r\n              <Card>\r\n                <ListGroup variant=\"flush\">\r\n                  <ListGroup.Item>\r\n                    <h2>\r\n                      {`Subtotal \r\n                    ${\r\n                      cartItems &&\r\n                      cartItems.reduce((acc, item) => acc + item.qty, 0)\r\n                    }\r\n                    items`}\r\n                    </h2>\r\n                    $\r\n                    {cartItems &&\r\n                      cartItems\r\n                        .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                        .toFixed(2)}\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Link to=\"/shipping\">\r\n                      <Button\r\n                        className=\"btn-block btn-dark\"\r\n                        disabled={cartItems && cartItems.length === 0}\r\n                      >\r\n                        Proceed to Checkout\r\n                      </Button>\r\n                    </Link>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        )}\r\n        {cartItems && cartItems.length === 0 && (\r\n          <Message>\r\n            You cart is empty <Link to=\"/\">Go Back</Link>\r\n          </Message>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CartScreen;\r\n","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\screens\\RegisterScreen.js",[],[],"C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\constants\\userConstants.js",[],[],"C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\components\\FormContainer.js",[],[],"C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\reducers\\cartReducers.js",[],[],"C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\constants\\cartConstants.js",[],[],"C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\actions\\userActions.js",[],[],"C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\actions\\productActions.js",[],[],"C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\actions\\cartActions.js",[],[],"C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\screens\\ProfileScreen.js",["295","296","297","298","299","300","301"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Col, Row, Form, Button, Card, Table } from \"react-bootstrap\";\r\nimport Tippy from \"@tippy.js/react\";\r\nimport \"tippy.js/dist/tippy.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Container from \"../components/Container\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport BlogPost from \"../components/BlogPost\";\r\nimport { updateProfile, getUserProfile, logout } from \"../actions/userActions\";\r\nimport { listMyOrders } from \"../actions/orderActions\";\r\nimport {\r\n  UPDATE_PROFILE_RESET,\r\n  USER_PROFILE_RESET,\r\n} from \"../constants/userConstants\";\r\nimport { listMyBlogs } from \"../actions/blogActions\";\r\n\r\nconst ProfileScreen = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [authorRequest, setAuthorRequest] = useState(null);\r\n  const [message, setMessage] = useState(null);\r\n  const [editState, setEditState] = useState(null);\r\n\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const userProfile = useSelector((state) => state.userProfile);\r\n  const { loading, error, profile } = userProfile;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  const orderList = useSelector((state) => state.orderList);\r\n  const { orders, loading: orderLoading, error: orderError } = orderList;\r\n\r\n  const myBlogs = useSelector((state) => state.myBlogs);\r\n  const { blogs, loading: blogLoading, error: blogError } = myBlogs;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      dispatch(logout());\r\n      navigate(\"/login\");\r\n    }\r\n\r\n    if (!profile || profile.name !== userInfo.name) {\r\n      dispatch(getUserProfile());\r\n    }\r\n\r\n    if (!orders) {\r\n      dispatch(listMyOrders());\r\n    }\r\n\r\n    if (!blogs) {\r\n      dispatch(listMyBlogs());\r\n    }\r\n\r\n    if (profile) {\r\n      setName(profile.name);\r\n      setEmail(profile.email);\r\n      setAuthorRequest(profile.authorRequest);\r\n    }\r\n\r\n    if (success) {\r\n      dispatch({ type: USER_PROFILE_RESET });\r\n      setEditState(false);\r\n    }\r\n  }, [dispatch, userInfo, success, navigate, profile, orders, blogs]);\r\n\r\n  const toggleAuthor = () => {\r\n    if (!authorRequest) {\r\n      setAuthorRequest(true);\r\n    } else {\r\n      setAuthorRequest(false);\r\n    }\r\n  };\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n      setTimeout(() => {\r\n        setMessage(false);\r\n      }, 3000);\r\n    } else {\r\n      dispatch(updateProfile(name, email, password, authorRequest));\r\n      setPassword(\"\");\r\n      setConfirmPassword(\"\");\r\n    }\r\n  };\r\n\r\n  const toggleEdit = () => {\r\n    if (!editState) {\r\n      setEditState(true);\r\n    }\r\n    if (editState) {\r\n      setEditState(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Row className=\"mb-3\">\r\n          {error && <Message variant=\"danger\">{error}</Message>}\r\n          {message && <Message variant=\"alert\">{message}</Message>}\r\n          {success && (\r\n            <Message variant=\"alert\">Profile Successfully Updated!</Message>\r\n          )}\r\n          {profile && (\r\n            <Col md={4}>\r\n              <h2>User Profile</h2>\r\n              <Card className=\"p-3\">\r\n                <Form onSubmit={submitHandler}>\r\n                  <Form.Group controlId=\"name\">\r\n                    <Form.Label>\r\n                      <strong>Name</strong>\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      type=\"name\"\r\n                      value={name}\r\n                      placeholder=\"Enter name\"\r\n                      onChange={(e) => setName(e.target.value)}\r\n                      disabled={!editState ? \"disabled\" : \"\"}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"email\">\r\n                    <Form.Label>\r\n                      <strong>Email</strong>\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      type=\"email\"\r\n                      value={email}\r\n                      placeholder=\"Enter email\"\r\n                      onChange={(e) => setEmail(e.target.value)}\r\n                      disabled={!editState ? \"disabled\" : \"\"}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"password\">\r\n                    <Form.Label>\r\n                      <strong>Password</strong>\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      type=\"password\"\r\n                      value={password}\r\n                      placeholder=\"Enter password\"\r\n                      onChange={(e) => setPassword(e.target.value)}\r\n                      disabled={!editState ? \"disabled\" : \"\"}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"confirmPassword\">\r\n                    <Form.Label>\r\n                      <strong>Confirm Password</strong>\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      type=\"password\"\r\n                      value={confirmPassword}\r\n                      placeholder=\"Enter password\"\r\n                      onChange={(e) => setConfirmPassword(e.target.value)}\r\n                      disabled={!editState ? \"disabled\" : \"\"}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Row>\r\n                    <Col className=\"mt-3 d-flex align-items-center\" md={5}>\r\n                      <Tippy\r\n                        content=\"The Author role allows users to contribute their own blog post to the community. Requests must be approved by an Administrator.\"\r\n                        placement=\"top\"\r\n                        arrow={false}\r\n                        delay={300}\r\n                      >\r\n                        <i className=\"fas fa-info-circle mx-1\"></i>\r\n                      </Tippy>\r\n                      {profile && profile.isAuthor ? (\r\n                        <Button variant=\"success\" disabled>\r\n                          Authorized as Author\r\n                        </Button>\r\n                      ) : profile && profile.authorRequest ? (\r\n                        <Button variant=\"secondary\" disabled>\r\n                          Author Role Requested\r\n                        </Button>\r\n                      ) : (\r\n                        <Button\r\n                          onClick={toggleAuthor}\r\n                          variant={authorRequest ? \"success\" : \"info\"}\r\n                          disabled={!editState}\r\n                        >\r\n                          Request Author Role\r\n                        </Button>\r\n                      )}\r\n                    </Col>\r\n                    <Col className=\"mt-3\" md={5}>\r\n                      {!editState && (\r\n                        <Button onClick={toggleEdit} variant=\"primary\">\r\n                          Update Profile\r\n                        </Button>\r\n                      )}\r\n                      {editState && (\r\n                        <Button\r\n                          onClick={(toggleEdit, submitHandler)}\r\n                          variant=\"info\"\r\n                        >\r\n                          Submit Update\r\n                        </Button>\r\n                      )}\r\n                    </Col>\r\n                  </Row>\r\n                </Form>\r\n              </Card>{\" \"}\r\n            </Col>\r\n          )}\r\n\r\n          <Col md={8}>\r\n            <h2>My Orders</h2>\r\n            {orders && orders.length > 0 ? (\r\n              <Table\r\n                bordered\r\n                hover\r\n                responsive\r\n                className=\"table-sm\"\r\n                variant=\"secondary\"\r\n              >\r\n                <thead>\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>DATE</th>\r\n                    <th>TOTAL</th>\r\n                    <th>PAID</th>\r\n                    <th>DELIVERED</th>\r\n                    <th>ORDER DETAILS</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {orders &&\r\n                    orders.map((order) => (\r\n                      <tr key={order._id}>\r\n                        <td>{order._id}</td>\r\n                        <td>{order.createdAt.substring(0, 10)}</td>\r\n                        <td>${order.totalPrice}</td>\r\n                        <td>\r\n                          {order.isPaid ? (\r\n                            order.paidAt.substring(0, 10)\r\n                          ) : (\r\n                            <i\r\n                              className=\"fas fa-times\"\r\n                              style={{ color: \"red\" }}\r\n                            ></i>\r\n                          )}\r\n                        </td>\r\n                        <td>\r\n                          {order.isDelivered ? (\r\n                            order.deliveredAt.substring(0, 10)\r\n                          ) : (\r\n                            <i\r\n                              className=\"fas fa-times\"\r\n                              style={{ color: \"red\" }}\r\n                            ></i>\r\n                          )}\r\n                        </td>\r\n                        <td>\r\n                          <LinkContainer\r\n                            to={\r\n                              !order.isPaid\r\n                                ? `/order/${order._id}`\r\n                                : `/order/review/${order._id}`\r\n                            }\r\n                          >\r\n                            <Button className=\"btn-sm\" variant=\"outline-dark\">\r\n                              Details\r\n                            </Button>\r\n                          </LinkContainer>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                </tbody>\r\n              </Table>\r\n            ) : (\r\n              <Message variant=\"info\">You Have No Orders</Message>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <h2>My Blog Post</h2>\r\n\r\n          <Col md={6}>\r\n            {blogs && blogs.length > 0 ? (\r\n              blogs.map((blog) => (\r\n                <Row key={blog._id} md={8}>\r\n                  <BlogPost blog={blog} />\r\n                </Row>\r\n              ))\r\n            ) : (\r\n              <Message variant=\"info\">You Have No Blog Posts</Message>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\reducers\\orderReducers.js",[],[],"C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\constants\\orderConstants.js",[],[],"C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\actions\\orderActions.js",[],[],"C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\screens\\ShopScreen.js",[],[],"C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\components\\Paginate.js",[],[],"C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\screens\\BlogScreen.js",[],[],"C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\screens\\ShippingScreen.js",["302","303","304"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Card } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Container from \"../components/Container\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { getUserProfile, saveShippingAddress } from \"../actions/userActions\";\r\nimport {\r\n  ORDER_CREATE_RESET,\r\n  ORDER_DETAILS_RESET,\r\n} from \"../constants/orderConstants\";\r\nimport { createOrder, updateOrder } from \"../actions/orderActions\";\r\nimport Message from \"../components/Message\";\r\n\r\nconst ShippingScreen = () => {\r\n  const [address, setAddress] = useState(\"\");\r\n  const [state, setState] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [postalCode, setPostalCode] = useState(\"\");\r\n  const [country, setCountry] = useState(\"\");\r\n\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const userProfile = useSelector((state) => state.userProfile);\r\n  const { profile } = userProfile;\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { error, order } = orderCreate;\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { order: detailsOrder } = orderDetails;\r\n\r\n  useEffect(() => {\r\n    if (!profile) {\r\n      dispatch(getUserProfile());\r\n    }\r\n    if (profile) {\r\n      setAddress(profile.shippingAddress.address);\r\n      setState(profile.shippingAddress.state);\r\n      setCity(profile.shippingAddress.city);\r\n      setPostalCode(profile.shippingAddress.postalCode);\r\n      setCountry(profile.shippingAddress.country);\r\n    }\r\n\r\n    if (order) {\r\n      navigate(`/order/${order._id}`);\r\n    }\r\n  }, [dispatch, profile, order]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(saveShippingAddress(address, city, state, postalCode, country));\r\n    if (!order) {\r\n      dispatch(createOrder(profile));\r\n    }\r\n\r\n    if (detailsOrder) {\r\n      dispatch(\r\n        updateOrder(detailsOrder._id, {\r\n          address,\r\n          city,\r\n          state,\r\n          postalCode,\r\n          country,\r\n        })\r\n      );\r\n      navigate(`/order/${detailsOrder._id}`);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Container>\r\n        <FormContainer>\r\n          {error && <Message variant=\"danger\">{error}</Message>}\r\n          <CheckoutSteps step1 step2 />\r\n          <h1>Shipping</h1>\r\n          <Card className=\"p-3\">\r\n            <Form onSubmit={submitHandler}>\r\n              <Form.Group controlId=\"address\">\r\n                <Form.Label>Address</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={address}\r\n                  placeholder=\"Enter address\"\r\n                  required\r\n                  onChange={(e) => setAddress(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"city\">\r\n                <Form.Label>City</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={city}\r\n                  placeholder=\"Enter city\"\r\n                  required\r\n                  onChange={(e) => setCity(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"state\">\r\n                <Form.Label>State</Form.Label>\r\n                <Form.Select\r\n                  value={state}\r\n                  placeholder=\"Enter state\"\r\n                  required\r\n                  onChange={(e) => setState(e.target.value)}\r\n                >\r\n                  <option value=\"AL\">Alabama</option>\r\n                  <option value=\"AK\">Alaska</option>\r\n                  <option value=\"AZ\">Arizona</option>\r\n                  <option value=\"AR\">Arkansas</option>\r\n                  <option value=\"CA\">California</option>\r\n                  <option value=\"CO\">Colorado</option>\r\n                  <option value=\"CT\">Connecticut</option>\r\n                  <option value=\"DE\">Delaware</option>\r\n                  <option value=\"DC\">District Of Columbia</option>\r\n                  <option value=\"FL\">Florida</option>\r\n                  <option value=\"GA\">Georgia</option>\r\n                  <option value=\"HI\">Hawaii</option>\r\n                  <option value=\"ID\">Idaho</option>\r\n                  <option value=\"IL\">Illinois</option>\r\n                  <option value=\"IN\">Indiana</option>\r\n                  <option value=\"IA\">Iowa</option>\r\n                  <option value=\"KS\">Kansas</option>\r\n                  <option value=\"KY\">Kentucky</option>\r\n                  <option value=\"LA\">Louisiana</option>\r\n                  <option value=\"ME\">Maine</option>\r\n                  <option value=\"MD\">Maryland</option>\r\n                  <option value=\"MA\">Massachusetts</option>\r\n                  <option value=\"MI\">Michigan</option>\r\n                  <option value=\"MN\">Minnesota</option>\r\n                  <option value=\"MS\">Mississippi</option>\r\n                  <option value=\"MO\">Missouri</option>\r\n                  <option value=\"MT\">Montana</option>\r\n                  <option value=\"NE\">Nebraska</option>\r\n                  <option value=\"NV\">Nevada</option>\r\n                  <option value=\"NH\">New Hampshire</option>\r\n                  <option value=\"NJ\">New Jersey</option>\r\n                  <option value=\"NM\">New Mexico</option>\r\n                  <option value=\"NY\">New York</option>\r\n                  <option value=\"NC\">North Carolina</option>\r\n                  <option value=\"ND\">North Dakota</option>\r\n                  <option value=\"OH\">Ohio</option>\r\n                  <option value=\"OK\">Oklahoma</option>\r\n                  <option value=\"OR\">Oregon</option>\r\n                  <option value=\"PA\">Pennsylvania</option>\r\n                  <option value=\"RI\">Rhode Island</option>\r\n                  <option value=\"SC\">South Carolina</option>\r\n                  <option value=\"SD\">South Dakota</option>\r\n                  <option value=\"TN\">Tennessee</option>\r\n                  <option value=\"TX\">Texas</option>\r\n                  <option value=\"UT\">Utah</option>\r\n                  <option value=\"VT\">Vermont</option>\r\n                  <option value=\"VA\">Virginia</option>\r\n                  <option value=\"WA\">Washington</option>\r\n                  <option value=\"WV\">West Virginia</option>\r\n                  <option value=\"WI\">Wisconsin</option>\r\n                  <option value=\"WY\">Wyoming</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"postalCode\">\r\n                <Form.Label>Postal Code</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={postalCode}\r\n                  placeholder=\"Enter postal code\"\r\n                  required\r\n                  onChange={(e) => setPostalCode(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"country\">\r\n                <Form.Label>Country</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={country}\r\n                  placeholder=\"Enter country\"\r\n                  required\r\n                  onChange={(e) => setCountry(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Button type=\"submit\" variant=\"primary\">\r\n                Continue\r\n              </Button>\r\n            </Form>\r\n          </Card>\r\n        </FormContainer>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShippingScreen;\r\n","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\components\\CheckoutSteps.js",[],[],"C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\screens\\UserListScreen.js",[],[],"C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\screens\\UserEditScreen.js",[],[],"C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\screens\\ProductListScreen.js",[],[],"C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\screens\\ProductEditScreen.js",[],[],"C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\screens\\OrderListScreen.js",[],[],"C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\screens\\AboutScreen.js",[],[],"C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\screens\\ContactScreen.js",[],[],"C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\screens\\PortalScreen.js",[],[],"C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\components\\Container.js",[],[],"C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\components\\BlogScreenBlogPosts.js",[],[],"C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\screens\\SingleBlogScreen.js",[],[],"C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\components\\DispatchLogout.js",[],"C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\components\\HorizontalCarousel.js",[],[],"C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\components\\TopProductsCarousel.js",[],[],"C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\screens\\OrderPayScreen.js",["305","306","307","308"],[],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\nimport CheckoutForm from \"../components/CheckoutForm\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Card,\r\n} from \"react-bootstrap\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Container from \"../components/Container\";\r\nimport Message from \"../components/Message\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { getOrder, payOrder } from \"../actions/orderActions\";\r\nimport { logout } from \"../actions/userActions\";\r\n\r\nconst stripePromise = loadStripe(\r\n  \"pk_test_51KfRvoCiXm4UN3ie2rCe8bQxPrNDY3Fck0a33xKG8NlkqieYNBmUcd26Wu1DdKA9lrGZrDLBIPx7UhxBvVErUaEs00F5dPdgJD\"\r\n);\r\nconst PlaceOrderScreen = () => {\r\n  const [paymentMethod, setPaymentMethod] = useState(\"\");\r\n  const [clientSecret, setClientSecret] = useState(\"\");\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { order, shippingAddress, error } = orderDetails;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      dispatch(logout());\r\n      navigate(\"/login\");\r\n    }\r\n    dispatch(getOrder(id));\r\n\r\n    async function stripeHandler() {\r\n      const name = order.user.name;\r\n      const email = order.user.email;\r\n      const { data } = await axios.post(\"/create-payment-intent\", {\r\n        id,\r\n        name,\r\n        email,\r\n      });\r\n      setClientSecret(data.clientSecret);\r\n    }\r\n\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get(\"/api/config/paypal\");\r\n      const script = document.createElement(\"script\");\r\n      script.type = \"text/javascript\";\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n      script.async = true;\r\n      script.onload = () => {\r\n        setSdkReady(true);\r\n      };\r\n      document.body.appendChild(script);\r\n      setSdkReady(true);\r\n    };\r\n    if (paymentMethod === \"Stripe\") {\r\n      console.log(paymentMethod);\r\n\r\n      stripeHandler();\r\n    }\r\n    if (paymentMethod === \"PayPal\") {\r\n      console.log(paymentMethod);\r\n      addPayPalScript();\r\n    } else {\r\n      setSdkReady(true);\r\n    }\r\n  }, [dispatch, id, userInfo, paymentMethod, sdkReady]);\r\n\r\n  const appearance = {\r\n    theme: \"stripe\",\r\n  };\r\n  const options = {\r\n    clientSecret,\r\n    appearance,\r\n  };\r\n\r\n  const successPaymentHandler = () => {\r\n    dispatch(payOrder(id, paymentMethod));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {order && (\r\n        <Container>\r\n          <CheckoutSteps step1 step2 step3 id={id} />\r\n          <Row>\r\n            <Col md={8}>\r\n              <h2>Order Items</h2>\r\n              <Card className=\"p-3\">\r\n                <ListGroup variant=\"flush\">\r\n                  {order.orderItems.map((item) => (\r\n                    <ListGroup.Item key={item._id}>\r\n                      <Row className=\"d-flex justify-content-between align-items-center\">\r\n                        <Col md={2}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                            sm={1}\r\n                          />\r\n                        </Col>\r\n                        <Col md={2}>\r\n                          <Link to={`/product/${item.productId}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={2}>${item.price}</Col>\r\n                        <Col md={1}>{item.qty}</Col>\r\n\r\n                        <Col className=\"d-flex justify-content-center\" md={2}>\r\n                          {item.totalPrice\r\n                            ? `$${item.totalPrice.toFixed(2)}`\r\n                            : `$${item.price.toFixed(2)}`}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n            <Col md={4}>\r\n              <h2>Order Summary</h2>\r\n              <Card className=\"p-3\">\r\n                <ListGroup variant=\"flush\">\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Items</Col>\r\n                      <Col>${order.itemsPrice.toFixed(2)}</Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Shipping</Col>\r\n                      <Col>${order.shippingPrice.toFixed(2)}</Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Tax</Col>\r\n                      <Col>${order.taxPrice.toFixed(2)}</Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Total</Col>\r\n                      <Col>${order.totalPrice.toFixed(2)}</Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"my-5\">\r\n            <Col md={8}>\r\n              <h2>Shipping Information</h2>\r\n              <Card className=\"p-3\">\r\n                <ListGroup variant=\"flush\">\r\n                  <ListGroup.Item>\r\n                    <strong>Name:</strong> {order.user.name}\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <strong>email:</strong> {order.user.email}\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <strong>Shipping Address:</strong>\r\n                    {` ${order.shippingAddress.address}, ${order.shippingAddress.city} ${order.shippingAddress.state} ${order.shippingAddress.postalCode}, ${order.shippingAddress.country}`}\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n            <Col md={4}>\r\n              <h2>Payment Method</h2>\r\n              <Card className=\"p-3\">\r\n                {!paymentMethod ? (\r\n                  <ListGroup variant=\"flush\">\r\n                    <Form.Check\r\n                      type=\"radio\"\r\n                      label=\"Paypal\"\r\n                      id=\"PayPal\"\r\n                      name=\"paymentMethod\"\r\n                      value=\"PayPal\"\r\n                      onChange={(e) => setPaymentMethod(e.target.value)}\r\n                    ></Form.Check>\r\n                    <Form.Check\r\n                      type=\"radio\"\r\n                      label=\"Stripe/Credit Card\"\r\n                      id=\"Stripe\"\r\n                      name=\"paymentMethod\"\r\n                      value=\"Stripe\"\r\n                      onChange={(e) => setPaymentMethod(e.target.value)}\r\n                    ></Form.Check>\r\n                    <Button type=\"submit\" variant=\"primary\">\r\n                      Continue\r\n                    </Button>\r\n                  </ListGroup>\r\n                ) : paymentMethod === \"PayPal\" && sdkReady ? (\r\n                  <PayPalButton\r\n                    amount={order.totalPrice}\r\n                    onSuccess={successPaymentHandler}\r\n                  />\r\n                ) : (\r\n                  paymentMethod === \"Stripe\" &&\r\n                  clientSecret && (\r\n                    <Elements options={options} stripe={stripePromise}>\r\n                      <CheckoutForm clientSecret={clientSecret} id={id} />\r\n                    </Elements>\r\n                  )\r\n                )}\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\screens\\OrderReviewScreen.js",[],[],"C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\components\\CheckoutForm.js",["309"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport Loader from \"./Loader\";\r\nimport Message from \"./Message\";\r\nimport {\r\n  PaymentElement,\r\n  useStripe,\r\n  useElements,\r\n} from \"@stripe/react-stripe-js\";\r\nimport { payOrder } from \"../actions/orderActions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst CheckoutForm = ({ clientSecret, id }) => {\r\n  //Hooks\r\n  const [message, setMessage] = useState(null);\r\n  const [success, setSuccess] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  //Stripe\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  //useEffect\r\n  useEffect(() => {\r\n    if (!stripe) {\r\n      return;\r\n    }\r\n    if (!clientSecret) {\r\n      return;\r\n    }\r\n\r\n    if (success) {\r\n      setTimeout(() => {\r\n        navigate(`/order/review/${id}`);\r\n      }, 3500);\r\n    }\r\n  }, [stripe, success, clientSecret, id, navigate]);\r\n\r\n  //Handlers\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!stripe || !elements) {\r\n      // Stripe.js has not yet loaded.\r\n      // Make sure to disable form submission until Stripe.js has loaded.\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    //disable redirect on confirmPayment\r\n    const { error } = await stripe.confirmPayment({\r\n      elements,\r\n      redirect: \"if_required\",\r\n    });\r\n\r\n    //Check payment status, set Order Pay on success\r\n    stripe.retrievePaymentIntent(clientSecret).then(function (response) {\r\n      if (\r\n        response.paymentIntent &&\r\n        response.paymentIntent.status === \"succeeded\"\r\n      ) {\r\n        setMessage(\"Payment Succeeded\");\r\n        setSuccess(true);\r\n        dispatch(payOrder(id, \"Stripe\"));\r\n      } else {\r\n        setMessage(\"Something went wrong\");\r\n      }\r\n    });\r\n\r\n    setIsLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Form id=\"payment-form\" onSubmit={handleSubmit}>\r\n      <Form.Label as=\"legend\">Stripe Secure Payments</Form.Label>\r\n      <hr />\r\n      <PaymentElement id=\"payment-element\" />\r\n      <Button\r\n        className=\"my-3\"\r\n        variant=\"primary\"\r\n        disabled={isLoading || !stripe || !elements || success}\r\n        type=\"submit\"\r\n      >\r\n        Pay Here\r\n      </Button>\r\n      {isLoading && <Loader />}\r\n      {message && <Message id=\"payment-message\">{message}</Message>}\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default CheckoutForm;\r\n","C:\\Users\\elijr\\Desktop\\CODING\\Personal Projects\\Portfolio\\eco\\frontend\\src\\components\\BlogContainer.js",[],[],{"ruleId":"310","severity":1,"message":"311","line":37,"column":29,"nodeType":"312","messageId":"313","endLine":37,"endColumn":36},{"ruleId":"310","severity":1,"message":"314","line":38,"column":9,"nodeType":"312","messageId":"313","endLine":38,"endColumn":24},{"ruleId":"310","severity":1,"message":"315","line":9,"column":8,"nodeType":"312","messageId":"313","endLine":9,"endColumn":14},{"ruleId":"310","severity":1,"message":"316","line":15,"column":3,"nodeType":"312","messageId":"313","endLine":15,"endColumn":23},{"ruleId":"310","severity":1,"message":"317","line":33,"column":11,"nodeType":"312","messageId":"313","endLine":33,"endColumn":18},{"ruleId":"310","severity":1,"message":"318","line":42,"column":28,"nodeType":"312","messageId":"313","endLine":42,"endColumn":40},{"ruleId":"310","severity":1,"message":"319","line":42,"column":49,"nodeType":"312","messageId":"313","endLine":42,"endColumn":59},{"ruleId":"310","severity":1,"message":"320","line":45,"column":27,"nodeType":"312","messageId":"313","endLine":45,"endColumn":38},{"ruleId":"310","severity":1,"message":"321","line":45,"column":47,"nodeType":"312","messageId":"313","endLine":45,"endColumn":56},{"ruleId":"310","severity":1,"message":"322","line":10,"column":3,"nodeType":"312","messageId":"313","endLine":10,"endColumn":21},{"ruleId":"310","severity":1,"message":"323","line":11,"column":3,"nodeType":"312","messageId":"313","endLine":11,"endColumn":22},{"ruleId":"324","severity":1,"message":"325","line":48,"column":6,"nodeType":"326","endLine":48,"endColumn":32,"suggestions":"327"},{"ruleId":"310","severity":1,"message":"328","line":19,"column":8,"nodeType":"312","messageId":"313","endLine":19,"endColumn":15},{"ruleId":"310","severity":1,"message":"329","line":40,"column":18,"nodeType":"312","messageId":"313","endLine":40,"endColumn":33},{"ruleId":"310","severity":1,"message":"330","line":40,"column":35,"nodeType":"312","messageId":"313","endLine":40,"endColumn":40},{"ruleId":"324","severity":1,"message":"331","line":83,"column":6,"nodeType":"326","endLine":83,"endColumn":55,"suggestions":"332"},{"ruleId":"310","severity":1,"message":"330","line":56,"column":13,"nodeType":"312","messageId":"313","endLine":56,"endColumn":18},"no-unused-vars","'success' is assigned a value but never used.","Identifier","unusedVar","'checkoutHandler' is assigned a value but never used.","'Loader' is defined but never used.","'UPDATE_PROFILE_RESET' is defined but never used.","'loading' is assigned a value but never used.","'orderLoading' is assigned a value but never used.","'orderError' is assigned a value but never used.","'blogLoading' is assigned a value but never used.","'blogError' is assigned a value but never used.","'ORDER_CREATE_RESET' is defined but never used.","'ORDER_DETAILS_RESET' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["333"],"'Message' is defined but never used.","'shippingAddress' is assigned a value but never used.","'error' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'navigate', 'order.user.email', and 'order.user.name'. Either include them or remove the dependency array.",["334"],{"desc":"335","fix":"336"},{"desc":"337","fix":"338"},"Update the dependencies array to be: [dispatch, profile, order, navigate]",{"range":"339","text":"340"},"Update the dependencies array to be: [dispatch, id, userInfo, paymentMethod, sdkReady, navigate, order.user.name, order.user.email]",{"range":"341","text":"342"},[1776,1802],"[dispatch, profile, order, navigate]",[2624,2673],"[dispatch, id, userInfo, paymentMethod, sdkReady, navigate, order.user.name, order.user.email]"]