{"ast":null,"code":"import axios from \"axios\";\nimport { BLOG_LIKE_FAIL, BLOG_LIKE_SUCCESS, BLOG_LIST_FAIL, BLOG_LIST_REQUEST, BLOG_LIST_SUCCESS, GET_MY_BLOGS_FAIL, GET_MY_BLOGS_REQUEST, GET_MY_BLOGS_SUCCESS } from \"../constants/blogConstants\";\nexport const listBlogs = () => async dispatch => {\n  try {\n    dispatch({\n      type: BLOG_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"api/blogs\");\n    dispatch({\n      type: BLOG_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: BLOG_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listMyBlogs = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: GET_MY_BLOGS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(\"api/blogs/profile\", config);\n    dispatch({\n      type: GET_MY_BLOGS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_MY_BLOGS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/elijr/Desktop/CODING/Personal Projects/Portfolio/eco/frontend/src/actions/blogActions.js"],"names":["axios","BLOG_LIKE_FAIL","BLOG_LIKE_SUCCESS","BLOG_LIST_FAIL","BLOG_LIST_REQUEST","BLOG_LIST_SUCCESS","GET_MY_BLOGS_FAIL","GET_MY_BLOGS_REQUEST","GET_MY_BLOGS_SUCCESS","listBlogs","dispatch","type","data","get","payload","error","response","message","listMyBlogs","getState","userLogin","userInfo","config","headers","Authorization","token"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,cADF,EAEEC,iBAFF,EAGEC,cAHF,EAIEC,iBAJF,EAKEC,iBALF,EAMEC,iBANF,EAOEC,oBAPF,EAQEC,oBARF,QASO,4BATP;AAWA,OAAO,MAAMC,SAAS,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACjD,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEP;AAAR,KAAD,CAAR;AAEA,UAAM;AAAEQ,MAAAA;AAAF,QAAW,MAAMZ,KAAK,CAACa,GAAN,CAAU,WAAV,CAAvB;AAEAH,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN,iBAAR;AAA2BS,MAAAA,OAAO,EAAEF;AAApC,KAAD,CAAR;AACD,GAND,CAME,OAAOG,KAAP,EAAc;AACdL,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAER,cADC;AAEPW,MAAAA,OAAO,EACLC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CAhBM;AAkBP,OAAO,MAAMC,WAAW,GAAG,MAAM,OAAOR,QAAP,EAAiBS,QAAjB,KAA8B;AAC7D,MAAI;AACFT,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEJ;AAAR,KAAD,CAAR;AACA,UAAM;AACJa,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AADP,QAEFF,QAAQ,EAFZ;AAIA,UAAMG,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AADjC;AADI,KAAf;AAKA,UAAM;AAAEb,MAAAA;AAAF,QAAW,MAAMZ,KAAK,CAACa,GAAN,CAAU,mBAAV,EAA+BS,MAA/B,CAAvB;AAEAZ,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEH,oBAAR;AAA8BM,MAAAA,OAAO,EAAEF;AAAvC,KAAD,CAAR;AACD,GAdD,CAcE,OAAOG,KAAP,EAAc;AACdL,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEL,iBADC;AAEPQ,MAAAA,OAAO,EACLC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CAxBM","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  BLOG_LIKE_FAIL,\r\n  BLOG_LIKE_SUCCESS,\r\n  BLOG_LIST_FAIL,\r\n  BLOG_LIST_REQUEST,\r\n  BLOG_LIST_SUCCESS,\r\n  GET_MY_BLOGS_FAIL,\r\n  GET_MY_BLOGS_REQUEST,\r\n  GET_MY_BLOGS_SUCCESS,\r\n} from \"../constants/blogConstants\";\r\n\r\nexport const listBlogs = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: BLOG_LIST_REQUEST });\r\n\r\n    const { data } = await axios.get(\"api/blogs\");\r\n\r\n    dispatch({ type: BLOG_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: BLOG_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listMyBlogs = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: GET_MY_BLOGS_REQUEST });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.get(\"api/blogs/profile\", config);\r\n\r\n    dispatch({ type: GET_MY_BLOGS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_MY_BLOGS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}