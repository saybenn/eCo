{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elijr\\\\Desktop\\\\CODING\\\\Personal Projects\\\\Portfolio\\\\eco\\\\frontend\\\\src\\\\screens\\\\ProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Col, Row, Form, Button, Card } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { updateProfile, getUserDetails } from \"../actions/userActions\";\nimport { UPDATE_PROFILE_RESET } from \"../constants/userConstants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProfileScreen = () => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [authorRequest, setAuthorRequest] = useState(null);\n  const [message, setMessage] = useState(null);\n  const [editState, setEditState] = useState(null);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n  const {\n    success\n  } = userUpdateProfile;\n  useEffect(() => {\n    if (!userInfo) {\n      navigate.push(\"/login\");\n    }\n\n    if (!user || !user.name || success) {\n      setEditState(false);\n      dispatch({\n        type: UPDATE_PROFILE_RESET\n      });\n      dispatch(getUserDetails());\n    } else {\n      setName(user.name);\n      setEmail(user.email);\n    }\n  }, [dispatch, userInfo, user, success]);\n\n  const toggleAuthor = () => {\n    if (!authorRequest) {\n      setAuthorRequest(true);\n    } else {\n      setAuthorRequest(false);\n    }\n  };\n\n  console.log(editState);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      setMessage(\"Passwords do not match\");\n      setTimeout(() => {\n        setMessage(false);\n      }, 3000);\n    } else {\n      console.log(123);\n      dispatch(updateProfile(name, email, password, authorRequest));\n    }\n  };\n\n  const toggleEdit = () => {\n    if (!editState) {\n      setEditState(true);\n    }\n\n    if (editState) {\n      setEditState(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"User Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 23\n        }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"alert\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 23\n        }, this), success && /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"alert\",\n          children: \"Profile Successfully Updated!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), userInfo && /*#__PURE__*/_jsxDEV(Card, {\n          className: \"p-3\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: submitHandler,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"name\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"name\",\n                value: name,\n                placeholder: \"Enter name\",\n                onChange: e => setName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"email\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"email\",\n                value: email,\n                placeholder: \"Enter email\",\n                onChange: e => setEmail(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"password\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"password\",\n                value: password,\n                placeholder: \"Enter password\",\n                onChange: e => setPassword(e.target.value),\n                disabled: !editState ? \"disabled\" : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"confirmPassword\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Confirm Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"password\",\n                value: confirmPassword,\n                placeholder: \"Enter password\",\n                onChange: e => setConfirmPassword(e.target.value),\n                disabled: !editState ? \"disabled\" : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: [\" \", /*#__PURE__*/_jsxDEV(Col, {\n                className: \"mt-3\",\n                md: 8,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: toggleAuthor,\n                  variant: !authorRequest ? \"secondary\" : \"success\",\n                  disabled: !editState ? \"disabled\" : \"\",\n                  children: \"Request Authorship\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                className: \"mt-3\",\n                md: 1,\n                children: [!editState && /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: toggleEdit,\n                  variant: \"primary\",\n                  children: \"Update Profile\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 23\n                }, this), editState && /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: (toggleEdit, submitHandler),\n                  variant: \"info\",\n                  children: \"Submit Update\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(ProfileScreen, \"7ckGBelkvGkAjEr/BIIhpulGkos=\", false, function () {\n  return [useNavigate, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = ProfileScreen;\nexport default ProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"sources":["C:/Users/elijr/Desktop/CODING/Personal Projects/Portfolio/eco/frontend/src/screens/ProfileScreen.js"],"names":["React","useState","useEffect","useDispatch","useSelector","Col","Row","Form","Button","Card","useNavigate","Loader","Message","updateProfile","getUserDetails","UPDATE_PROFILE_RESET","ProfileScreen","name","setName","password","setPassword","email","setEmail","confirmPassword","setConfirmPassword","authorRequest","setAuthorRequest","message","setMessage","editState","setEditState","navigate","dispatch","userDetails","state","loading","error","user","userLogin","userInfo","userUpdateProfile","success","push","type","toggleAuthor","console","log","submitHandler","e","preventDefault","setTimeout","toggleEdit","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Col, Row, Form, Button, Card } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { updateProfile, getUserDetails } from \"../actions/userActions\";\r\nimport { UPDATE_PROFILE_RESET } from \"../constants/userConstants\";\r\n\r\nconst ProfileScreen = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [authorRequest, setAuthorRequest] = useState(null);\r\n  const [message, setMessage] = useState(null);\r\n  const [editState, setEditState] = useState(null);\r\n\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      navigate.push(\"/login\");\r\n    }\r\n    if (!user || !user.name || success) {\r\n      setEditState(false);\r\n      dispatch({ type: UPDATE_PROFILE_RESET });\r\n      dispatch(getUserDetails());\r\n    } else {\r\n      setName(user.name);\r\n      setEmail(user.email);\r\n    }\r\n  }, [dispatch, userInfo, user, success]);\r\n\r\n  const toggleAuthor = () => {\r\n    if (!authorRequest) {\r\n      setAuthorRequest(true);\r\n    } else {\r\n      setAuthorRequest(false);\r\n    }\r\n  };\r\n  console.log(editState);\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n      setTimeout(() => {\r\n        setMessage(false);\r\n      }, 3000);\r\n    } else {\r\n      console.log(123);\r\n      dispatch(updateProfile(name, email, password, authorRequest));\r\n    }\r\n  };\r\n\r\n  const toggleEdit = () => {\r\n    if (!editState) {\r\n      setEditState(true);\r\n    }\r\n    if (editState) {\r\n      setEditState(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col md={3}>\r\n          <h1>User Profile</h1>\r\n          {loading && <Loader />}\r\n          {error && <Message variant=\"danger\">{error}</Message>}\r\n          {message && <Message variant=\"alert\">{message}</Message>}\r\n          {success && (\r\n            <Message variant=\"alert\">Profile Successfully Updated!</Message>\r\n          )}\r\n          {/* {success && <Message variant=\"success\">Profile Updated</Message>} */}\r\n          {userInfo && (\r\n            <Card className=\"p-3\">\r\n              <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId=\"name\">\r\n                  <Form.Label>\r\n                    <strong>Name</strong>\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type=\"name\"\r\n                    value={name}\r\n                    placeholder=\"Enter name\"\r\n                    onChange={(e) => setName(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"email\">\r\n                  <Form.Label>\r\n                    <strong>Email</strong>\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    value={email}\r\n                    placeholder=\"Enter email\"\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"password\">\r\n                  <Form.Label>\r\n                    <strong>Password</strong>\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    value={password}\r\n                    placeholder=\"Enter password\"\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    disabled={!editState ? \"disabled\" : \"\"}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"confirmPassword\">\r\n                  <Form.Label>\r\n                    <strong>Confirm Password</strong>\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    value={confirmPassword}\r\n                    placeholder=\"Enter password\"\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    disabled={!editState ? \"disabled\" : \"\"}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n                <Row>\r\n                  {\" \"}\r\n                  <Col className=\"mt-3\" md={8}>\r\n                    <Button\r\n                      onClick={toggleAuthor}\r\n                      variant={!authorRequest ? \"secondary\" : \"success\"}\r\n                      disabled={!editState ? \"disabled\" : \"\"}\r\n                    >\r\n                      Request Authorship\r\n                    </Button>\r\n                  </Col>\r\n                  <Col className=\"mt-3\" md={1}>\r\n                    {!editState && (\r\n                      <Button onClick={toggleEdit} variant=\"primary\">\r\n                        Update Profile\r\n                      </Button>\r\n                    )}\r\n                    {editState && (\r\n                      <Button\r\n                        onClick={(toggleEdit, submitHandler)}\r\n                        variant=\"info\"\r\n                      >\r\n                        Submit Update\r\n                      </Button>\r\n                    )}\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </Card>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n"]},"metadata":{},"sourceType":"module"}