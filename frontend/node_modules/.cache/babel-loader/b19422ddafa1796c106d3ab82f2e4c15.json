{"ast":null,"code":"import jwt from \"jsonwebtoken\";\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { blogListReducer, blogCommentReducer, blogCommentDeleteReducer, blogPostDeleteReducer, blogLikeReducer, topBlogReducer, myBlogReducer, singleBlogReducer, blogCreateReducer } from \"./reducers/blogReducers.js\";\nimport { productListReducer, productDetailsReducer, topProductsReducer, productReviewReducer } from \"./reducers/productReducers.js\";\nimport { userRegisterReducer, userUpdateProfileReducer, userDetailsReducer, userLoginReducer } from \"./reducers/userReducers.js\";\nimport { cartAddReducer, cartGetReducer, cartControlReducer } from \"./reducers/cartReducers.js\";\nimport { orderListReducer, orderCreateReducer, orderDetailsReducer, orderPayReducer, orderDeliverReducer } from \"./reducers/orderReducers.js\";\nconst reducer = combineReducers({\n  blogLike: blogLikeReducer,\n  blogComment: blogCommentReducer,\n  blogList: blogListReducer,\n  blogCommentDelete: blogCommentDeleteReducer,\n  blogDeletePost: blogPostDeleteReducer,\n  myBlogs: myBlogReducer,\n  topBlog: topBlogReducer,\n  singleBlog: singleBlogReducer,\n  createBlog: blogCreateReducer,\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  topProducts: topProductsReducer,\n  productReview: productReviewReducer,\n  userRegister: userRegisterReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userDetails: userDetailsReducer,\n  userLogin: userLoginReducer,\n  cartAdd: cartAddReducer,\n  cartGet: cartGetReducer,\n  cartControl: cartControlReducer,\n  orderList: orderListReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderDeliver: orderDeliverReducer\n});\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\n\nconst checkTokenAuthenticity = async () => next => action => {\n  const token = JSON.parse(localStorage.getItem(\"userInfo\")) && JSON.parse(localStorage.getItem(\"userInfo\"))[\"token\"];\n\n  if (token) {\n    try {\n      const decoded = jwt.verify(token, process.env.JWT_SECRET);\n      console.log(decoded);\n      next();\n    } catch (error) {\n      console.log(error.message);\n      throw new Error(\"Not authorized, token failed\");\n    }\n  }\n};\n\nconst checkTokenExpirationMiddleware = () => next => action => {\n  const token = JSON.parse(localStorage.getItem(\"userInfo\")) && JSON.parse(localStorage.getItem(\"userInfo\"))[\"token\"];\n  console.log(token);\n\n  if (token) {\n    if (jwt.decode(token).exp < Date.now() / 1000) {\n      localStorage.removeItem(\"userInfo\");\n      next(action);\n    } else {\n      next(action);\n    }\n  } else {\n    next(action);\n  }\n};\n\nconst middleware = [thunk, checkTokenExpirationMiddleware, checkTokenAuthenticity];\nconst composeEnhance = composeWithDevTools({\n  trace: true,\n  traceLimit: 10\n});\nconst store = createStore(reducer, initialState, composeEnhance(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/elijr/Desktop/CODING/Personal Projects/Portfolio/eco/frontend/src/store.js"],"names":["jwt","createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","blogListReducer","blogCommentReducer","blogCommentDeleteReducer","blogPostDeleteReducer","blogLikeReducer","topBlogReducer","myBlogReducer","singleBlogReducer","blogCreateReducer","productListReducer","productDetailsReducer","topProductsReducer","productReviewReducer","userRegisterReducer","userUpdateProfileReducer","userDetailsReducer","userLoginReducer","cartAddReducer","cartGetReducer","cartControlReducer","orderListReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderDeliverReducer","reducer","blogLike","blogComment","blogList","blogCommentDelete","blogDeletePost","myBlogs","topBlog","singleBlog","createBlog","productList","productDetails","topProducts","productReview","userRegister","userUpdateProfile","userDetails","userLogin","cartAdd","cartGet","cartControl","orderList","orderCreate","orderDetails","orderPay","orderDeliver","userInfoFromStorage","localStorage","getItem","JSON","parse","initialState","userInfo","checkTokenAuthenticity","next","action","token","decoded","verify","process","env","JWT_SECRET","console","log","error","message","Error","checkTokenExpirationMiddleware","decode","exp","Date","now","removeItem","middleware","composeEnhance","trace","traceLimit","store"],"mappings":"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","sourcesContent":["import jwt from \"jsonwebtoken\";\r\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n  blogListReducer,\r\n  blogCommentReducer,\r\n  blogCommentDeleteReducer,\r\n  blogPostDeleteReducer,\r\n  blogLikeReducer,\r\n  topBlogReducer,\r\n  myBlogReducer,\r\n  singleBlogReducer,\r\n  blogCreateReducer,\r\n} from \"./reducers/blogReducers.js\";\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n  topProductsReducer,\r\n  productReviewReducer,\r\n} from \"./reducers/productReducers.js\";\r\nimport {\r\n  userRegisterReducer,\r\n  userUpdateProfileReducer,\r\n  userDetailsReducer,\r\n  userLoginReducer,\r\n} from \"./reducers/userReducers.js\";\r\nimport {\r\n  cartAddReducer,\r\n  cartGetReducer,\r\n  cartControlReducer,\r\n} from \"./reducers/cartReducers.js\";\r\nimport {\r\n  orderListReducer,\r\n  orderCreateReducer,\r\n  orderDetailsReducer,\r\n  orderPayReducer,\r\n  orderDeliverReducer,\r\n} from \"./reducers/orderReducers.js\";\r\n\r\nconst reducer = combineReducers({\r\n  blogLike: blogLikeReducer,\r\n  blogComment: blogCommentReducer,\r\n  blogList: blogListReducer,\r\n  blogCommentDelete: blogCommentDeleteReducer,\r\n  blogDeletePost: blogPostDeleteReducer,\r\n  myBlogs: myBlogReducer,\r\n  topBlog: topBlogReducer,\r\n  singleBlog: singleBlogReducer,\r\n  createBlog: blogCreateReducer,\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  topProducts: topProductsReducer,\r\n  productReview: productReviewReducer,\r\n  userRegister: userRegisterReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  userDetails: userDetailsReducer,\r\n  userLogin: userLoginReducer,\r\n  cartAdd: cartAddReducer,\r\n  cartGet: cartGetReducer,\r\n  cartControl: cartControlReducer,\r\n  orderList: orderListReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderDeliver: orderDeliverReducer,\r\n});\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst initialState = { userLogin: { userInfo: userInfoFromStorage } };\r\n\r\nconst checkTokenAuthenticity = async () => (next) => (action) => {\r\n  const token =\r\n    JSON.parse(localStorage.getItem(\"userInfo\")) &&\r\n    JSON.parse(localStorage.getItem(\"userInfo\"))[\"token\"];\r\n  if (token) {\r\n    try {\r\n      const decoded = jwt.verify(token, process.env.JWT_SECRET);\r\n      console.log(decoded);\r\n      next();\r\n    } catch (error) {\r\n      console.log(error.message);\r\n      throw new Error(\"Not authorized, token failed\");\r\n    }\r\n  }\r\n};\r\n\r\nconst checkTokenExpirationMiddleware = () => (next) => (action) => {\r\n  const token =\r\n    JSON.parse(localStorage.getItem(\"userInfo\")) &&\r\n    JSON.parse(localStorage.getItem(\"userInfo\"))[\"token\"];\r\n  console.log(token);\r\n  if (token) {\r\n    if (jwt.decode(token).exp < Date.now() / 1000) {\r\n      localStorage.removeItem(\"userInfo\");\r\n      next(action);\r\n    } else {\r\n      next(action);\r\n    }\r\n  } else {\r\n    next(action);\r\n  }\r\n};\r\n\r\nconst middleware = [\r\n  thunk,\r\n  checkTokenExpirationMiddleware,\r\n  checkTokenAuthenticity,\r\n];\r\n\r\nconst composeEnhance = composeWithDevTools({\r\n  trace: true,\r\n  traceLimit: 10,\r\n});\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeEnhance(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}