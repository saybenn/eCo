{"ast":null,"code":"import axios from \"axios\";\nimport { ADD_ITEM_CART_FAIL, ADD_ITEM_CART_REQUEST, ADD_ITEM_CART_SUCCESS, GET_CART_FAIL, GET_CART_REQUEST, GET_CART_SUCCESS, UPDATE_CART_FAIL, UPDATE_CART_REQUEST, UPDATE_CART_SUCCESS } from \"../constants/cartConstants\";\nexport const addItemToCart = function (name, price, image, qty) {\n  let options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n  return async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: ADD_ITEM_CART_REQUEST\n      });\n      console.log(name, price, image, qty, options);\n      const {\n        userLogin: {\n          userInfo\n        }\n      } = getState();\n      const config = {\n        headers: {\n          Authorization: `Bearer ${userInfo.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.post(\"/api/cart\", {\n        name,\n        price,\n        image,\n        qty,\n        options\n      }, config);\n      dispatch({\n        type: ADD_ITEM_CART_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: ADD_ITEM_CART_FAIL,\n        payload: error.response && error.response.data.message ? error.response.data.message : error.message\n      });\n    }\n  };\n};\nexport const updateCart = cartItem => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: UPDATE_CART_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(\"/api/cart\", cartItem, config);\n    dispatch({\n      type: UPDATE_CART_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_CART_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getCart = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: GET_CART_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(\"/api/cart\", {}, config);\n    dispatch({\n      type: GET_CART_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_CART_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/elijr/Desktop/CODING/Personal Projects/Portfolio/eco/frontend/src/actions/cartActions.js"],"names":["axios","ADD_ITEM_CART_FAIL","ADD_ITEM_CART_REQUEST","ADD_ITEM_CART_SUCCESS","GET_CART_FAIL","GET_CART_REQUEST","GET_CART_SUCCESS","UPDATE_CART_FAIL","UPDATE_CART_REQUEST","UPDATE_CART_SUCCESS","addItemToCart","name","price","image","qty","options","dispatch","getState","type","console","log","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","error","response","message","updateCart","cartItem","put","getCart","get"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  ADD_ITEM_CART_FAIL,\r\n  ADD_ITEM_CART_REQUEST,\r\n  ADD_ITEM_CART_SUCCESS,\r\n  GET_CART_FAIL,\r\n  GET_CART_REQUEST,\r\n  GET_CART_SUCCESS,\r\n  UPDATE_CART_FAIL,\r\n  UPDATE_CART_REQUEST,\r\n  UPDATE_CART_SUCCESS,\r\n} from \"../constants/cartConstants\";\r\n\r\nexport const addItemToCart =\r\n  (name, price, image, qty, options = null) =>\r\n  async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: ADD_ITEM_CART_REQUEST });\r\n      console.log(name, price, image, qty, options);\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        \"/api/cart\",\r\n        { name, price, image, qty, options },\r\n        config\r\n      );\r\n\r\n      dispatch({ type: ADD_ITEM_CART_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: ADD_ITEM_CART_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const updateCart = (cartItem) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: UPDATE_CART_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\"/api/cart\", cartItem, config);\r\n\r\n    dispatch({ type: UPDATE_CART_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: UPDATE_CART_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getCart = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: GET_CART_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(\"/api/cart\", {}, config);\r\n\r\n    dispatch({ type: GET_CART_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_CART_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}