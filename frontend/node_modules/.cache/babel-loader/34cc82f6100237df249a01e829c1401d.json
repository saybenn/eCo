{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elijr\\\\Desktop\\\\CODING\\\\Personal Projects\\\\Portfolio\\\\eco\\\\frontend\\\\src\\\\screens\\\\ProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Col, Row, Form, Table, Button } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport BlogPost from \"../components/BlogPost\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { updateProfile, getUserDetails } from \"../actions/userActions\";\nimport { listMyBlogs } from \"../actions/blogActions\";\nimport { UPDATE_PROFILE_RESET } from \"../constants/userConstants\";\nimport { listMyOrders } from \"../actions/orderActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProfileScreen = () => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [authorRequest, setAuthorRequest] = useState(false);\n  const [message, setMessage] = useState(null);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n  const {\n    success\n  } = userUpdateProfile;\n  const orderList = useSelector(state => state.orderList);\n  const {\n    loading: orderLoading,\n    error: orderError,\n    orders\n  } = orderList;\n  const myBlogs = useSelector(state => state.myBlogs);\n  const {\n    loading: blogLoading,\n    error: blogError,\n    blogs\n  } = myBlogs;\n  useEffect(() => {\n    if (!userInfo) {\n      navigate.push(\"/login\");\n    } else {\n      if (!user || !user.name) {\n        dispatch(getUserDetails());\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      } // if (!orders) {\n      //   dispatch(listMyOrders());\n      // }\n      // if (!blogs) {\n      //   dispatch(listMyBlogs());\n      // }\n\n    }\n  }, [dispatch]);\n\n  const toggleAuthor = () => {\n    if (!authorRequest) {\n      setAuthorRequest(true);\n    } else {\n      setAuthorRequest(false);\n    }\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      setMessage(\"Passwords do not match\");\n    } else {\n      dispatch(updateProfile(name, email, password, authorRequest));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"User Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 23\n        }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"alert\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 23\n        }, this), success && /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"success\",\n          children: \"Profile Updated\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 23\n        }, this), userInfo && /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: submitHandler,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"name\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"name\",\n              value: name,\n              placeholder: \"Enter name\",\n              onChange: e => setName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              value: email,\n              placeholder: \"Enter email\",\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              value: password,\n              placeholder: \"Enter password\",\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"confirmPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"confirmPassword\",\n              value: confirmPassword,\n              placeholder: \"Enter Password\",\n              onChange: e => setConfirmPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: 1,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: toggleAuthor(),\n                variant: !authorRequest ? \"secondary\" : \"success\",\n                children: \"Request Author\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 1,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"primary\",\n                children: \"Update Profile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), blogs ? /*#__PURE__*/_jsxDEV(Row, {\n      children: blogs.map(blog => /*#__PURE__*/_jsxDEV(Row, {\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(BlogPost, {\n          blog: blog\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }, this) : userInfo.isAuthor & !blogs ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"info\",\n      children: \"No Blog Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }, this) : !userInfo.isAuthor( /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false))]\n  }, void 0, true);\n};\n\n_s(ProfileScreen, \"YF5Ce8KA5sZJBAkyhU8V7g4Vcjc=\", false, function () {\n  return [useNavigate, useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = ProfileScreen;\nexport default ProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"sources":["C:/Users/elijr/Desktop/CODING/Personal Projects/Portfolio/eco/frontend/src/screens/ProfileScreen.js"],"names":["React","useState","useEffect","useSelector","useDispatch","Col","Row","Form","Table","Button","LinkContainer","useNavigate","BlogPost","Loader","Message","updateProfile","getUserDetails","listMyBlogs","UPDATE_PROFILE_RESET","listMyOrders","ProfileScreen","name","setName","password","setPassword","email","setEmail","confirmPassword","setConfirmPassword","authorRequest","setAuthorRequest","message","setMessage","navigate","dispatch","userDetails","state","loading","error","user","userLogin","userInfo","userUpdateProfile","success","orderList","orderLoading","orderError","orders","myBlogs","blogLoading","blogError","blogs","push","toggleAuthor","submitHandler","e","preventDefault","target","value","map","blog","isAuthor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,KAAzB,EAAgCC,MAAhC,QAA8C,iBAA9C;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,aAAT,EAAwBC,cAAxB,QAA8C,wBAA9C;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,oBAAT,QAAqC,4BAArC;AACA,SAASC,YAAT,QAA6B,yBAA7B;;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBrB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACsB,QAAD,EAAWC,WAAX,IAA0BvB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACwB,KAAD,EAAQC,QAAR,IAAoBzB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAC0B,eAAD,EAAkBC,kBAAlB,IAAwC3B,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAAC4B,aAAD,EAAgBC,gBAAhB,IAAoC7B,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAAC8B,OAAD,EAAUC,UAAV,IAAwB/B,QAAQ,CAAC,IAAD,CAAtC;AAEA,QAAMgC,QAAQ,GAAGtB,WAAW,EAA5B;AACA,QAAMuB,QAAQ,GAAG9B,WAAW,EAA5B;AAEA,QAAM+B,WAAW,GAAGhC,WAAW,CAAEiC,KAAD,IAAWA,KAAK,CAACD,WAAlB,CAA/B;AACA,QAAM;AAAEE,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BJ,WAAjC;AAEA,QAAMK,SAAS,GAAGrC,WAAW,CAAEiC,KAAD,IAAWA,KAAK,CAACI,SAAlB,CAA7B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAeD,SAArB;AAEA,QAAME,iBAAiB,GAAGvC,WAAW,CAAEiC,KAAD,IAAWA,KAAK,CAACM,iBAAlB,CAArC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAcD,iBAApB;AAEA,QAAME,SAAS,GAAGzC,WAAW,CAAEiC,KAAD,IAAWA,KAAK,CAACQ,SAAlB,CAA7B;AACA,QAAM;AAAEP,IAAAA,OAAO,EAAEQ,YAAX;AAAyBP,IAAAA,KAAK,EAAEQ,UAAhC;AAA4CC,IAAAA;AAA5C,MAAuDH,SAA7D;AAEA,QAAMI,OAAO,GAAG7C,WAAW,CAAEiC,KAAD,IAAWA,KAAK,CAACY,OAAlB,CAA3B;AACA,QAAM;AAAEX,IAAAA,OAAO,EAAEY,WAAX;AAAwBX,IAAAA,KAAK,EAAEY,SAA/B;AAA0CC,IAAAA;AAA1C,MAAoDH,OAA1D;AAEA9C,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACuC,QAAL,EAAe;AACbR,MAAAA,QAAQ,CAACmB,IAAT,CAAc,QAAd;AACD,KAFD,MAEO;AACL,UAAI,CAACb,IAAD,IAAS,CAACA,IAAI,CAAClB,IAAnB,EAAyB;AACvBa,QAAAA,QAAQ,CAAClB,cAAc,EAAf,CAAR;AACD,OAFD,MAEO;AACLM,QAAAA,OAAO,CAACiB,IAAI,CAAClB,IAAN,CAAP;AACAK,QAAAA,QAAQ,CAACa,IAAI,CAACd,KAAN,CAAR;AACD,OANI,CAOL;AACA;AACA;AACA;AACA;AACA;;AACD;AACF,GAjBQ,EAiBN,CAACS,QAAD,CAjBM,CAAT;;AAmBA,QAAMmB,YAAY,GAAG,MAAM;AACzB,QAAI,CAACxB,aAAL,EAAoB;AAClBC,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,KAFD,MAEO;AACLA,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD;AACF,GAND;;AAQA,QAAMwB,aAAa,GAAIC,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIjC,QAAQ,KAAKI,eAAjB,EAAkC;AAChCK,MAAAA,UAAU,CAAC,wBAAD,CAAV;AACD,KAFD,MAEO;AACLE,MAAAA,QAAQ,CAACnB,aAAa,CAACM,IAAD,EAAOI,KAAP,EAAcF,QAAd,EAAwBM,aAAxB,CAAd,CAAR;AACD;AACF,GAPD;;AASA,sBACE;AAAA,4BACE,QAAC,GAAD;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGQ,OAAO,iBAAI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBAFd,EAGGC,KAAK,iBAAI,QAAC,OAAD;AAAS,UAAA,OAAO,EAAC,QAAjB;AAAA,oBAA2BA;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAHZ,EAIGP,OAAO,iBAAI,QAAC,OAAD;AAAS,UAAA,OAAO,EAAC,OAAjB;AAAA,oBAA0BA;AAA1B;AAAA;AAAA;AAAA;AAAA,gBAJd,EAKGY,OAAO,iBAAI,QAAC,OAAD;AAAS,UAAA,OAAO,EAAC,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALd,EAMGF,QAAQ,iBACP,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAEa,aAAhB;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,MAAtB;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,KAAK,EAAEjC,IAFT;AAGE,cAAA,WAAW,EAAC,YAHd;AAIE,cAAA,QAAQ,EAAGkC,CAAD,IAAOjC,OAAO,CAACiC,CAAC,CAACE,MAAF,CAASC,KAAV;AAJ1B;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAWE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,OAAtB;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,cAAA,IAAI,EAAC,OADP;AAEE,cAAA,KAAK,EAAEjC,KAFT;AAGE,cAAA,WAAW,EAAC,aAHd;AAIE,cAAA,QAAQ,EAAG8B,CAAD,IAAO7B,QAAQ,CAAC6B,CAAC,CAACE,MAAF,CAASC,KAAV;AAJ3B;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXF,eAoBE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,UAAtB;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,cAAA,IAAI,EAAC,UADP;AAEE,cAAA,KAAK,EAAEnC,QAFT;AAGE,cAAA,WAAW,EAAC,gBAHd;AAIE,cAAA,QAAQ,EAAGgC,CAAD,IAAO/B,WAAW,CAAC+B,CAAC,CAACE,MAAF,CAASC,KAAV;AAJ9B;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBApBF,eA6BE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,iBAAtB;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,cAAA,IAAI,EAAC,iBADP;AAEE,cAAA,KAAK,EAAE/B,eAFT;AAGE,cAAA,WAAW,EAAC,gBAHd;AAIE,cAAA,QAAQ,EAAG4B,CAAD,IAAO3B,kBAAkB,CAAC2B,CAAC,CAACE,MAAF,CAASC,KAAV;AAJrC;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBA7BF,eAsCE,QAAC,GAAD;AAAA,oCACE,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE,CAAT;AAAA,qCACE,QAAC,MAAD;AACE,gBAAA,OAAO,EAAEL,YAAY,EADvB;AAEE,gBAAA,OAAO,EAAE,CAACxB,aAAD,GAAiB,WAAjB,GAA+B,SAF1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eASE,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE,CAAT;AAAA,qCACE,QAAC,MAAD;AAAQ,gBAAA,IAAI,EAAC,QAAb;AAAsB,gBAAA,OAAO,EAAC,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBATF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAtCF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,EA0HGsB,KAAK,gBACJ,QAAC,GAAD;AAAA,gBACGA,KAAK,CAACQ,GAAN,CAAWC,IAAD,iBACT,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA,+BACE,QAAC,QAAD;AAAU,UAAA,IAAI,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADI,GAQFnB,QAAQ,CAACoB,QAAT,GAAoB,CAACV,KAArB,gBACF,QAAC,OAAD;AAAS,MAAA,OAAO,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADE,GAGF,CAACV,QAAQ,CAACoB,QAAT,eAAkB,qCAAlB,CArIL;AAAA,kBADF;AA0ID,CAxMD;;GAAMzC,a;UAQaT,W,EACAP,W,EAEGD,W,EAGFA,W,EAGQA,W,EAGRA,W,EAGFA,W;;;KAvBZiB,a;AA0MN,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Col, Row, Form, Table, Button } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport BlogPost from \"../components/BlogPost\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { updateProfile, getUserDetails } from \"../actions/userActions\";\r\nimport { listMyBlogs } from \"../actions/blogActions\";\r\nimport { UPDATE_PROFILE_RESET } from \"../constants/userConstants\";\r\nimport { listMyOrders } from \"../actions/orderActions\";\r\n\r\nconst ProfileScreen = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [authorRequest, setAuthorRequest] = useState(false);\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  const orderList = useSelector((state) => state.orderList);\r\n  const { loading: orderLoading, error: orderError, orders } = orderList;\r\n\r\n  const myBlogs = useSelector((state) => state.myBlogs);\r\n  const { loading: blogLoading, error: blogError, blogs } = myBlogs;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      navigate.push(\"/login\");\r\n    } else {\r\n      if (!user || !user.name) {\r\n        dispatch(getUserDetails());\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n      }\r\n      // if (!orders) {\r\n      //   dispatch(listMyOrders());\r\n      // }\r\n      // if (!blogs) {\r\n      //   dispatch(listMyBlogs());\r\n      // }\r\n    }\r\n  }, [dispatch]);\r\n\r\n  const toggleAuthor = () => {\r\n    if (!authorRequest) {\r\n      setAuthorRequest(true);\r\n    } else {\r\n      setAuthorRequest(false);\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      dispatch(updateProfile(name, email, password, authorRequest));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col md={3}>\r\n          <h1>User Profile</h1>\r\n          {loading && <Loader />}\r\n          {error && <Message variant=\"danger\">{error}</Message>}\r\n          {message && <Message variant=\"alert\">{message}</Message>}\r\n          {success && <Message variant=\"success\">Profile Updated</Message>}\r\n          {userInfo && (\r\n            <Form onSubmit={submitHandler}>\r\n              <Form.Group controlId=\"name\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"name\"\r\n                  value={name}\r\n                  placeholder=\"Enter name\"\r\n                  onChange={(e) => setName(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"email\">\r\n                <Form.Label>Email Address</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  value={email}\r\n                  placeholder=\"Enter email\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"password\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  value={password}\r\n                  placeholder=\"Enter password\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"confirmPassword\">\r\n                <Form.Label>Confirm Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"confirmPassword\"\r\n                  value={confirmPassword}\r\n                  placeholder=\"Enter Password\"\r\n                  onChange={(e) => setConfirmPassword(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Row>\r\n                <Col md={1}>\r\n                  <Button\r\n                    onClick={toggleAuthor()}\r\n                    variant={!authorRequest ? \"secondary\" : \"success\"}\r\n                  >\r\n                    Request Author\r\n                  </Button>\r\n                </Col>\r\n                <Col md={1}>\r\n                  <Button type=\"submit\" variant=\"primary\">\r\n                    Update Profile\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          )}\r\n          {/* <Col md={9}>\r\n            <h2>My Orders</h2>\r\n            {orderLoading && <Loader />}\r\n            {orderError && <Message variant=\"danger\">{orderError}</Message>}\r\n            {orders ? (\r\n              <Table striped bordered hover responsive className=\"table-sm\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>DATE</th>\r\n                    <th>TOTAL</th>\r\n                    <th>PAID</th>\r\n                    <th>DELIVERED</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {orders.map((order) => (\r\n                    <tr key={order._id}>\r\n                      <td>{order._id}</td>\r\n                      <td>{order.createdAt.substring(0, 10)}</td>\r\n                      <td>{order.totalPrice}</td>\r\n                      <td>\r\n                        {order.isPaid ? (\r\n                          order.paidAt.subString(0, 10)\r\n                        ) : (\r\n                          <i\r\n                            className=\"fas fa-times\"\r\n                            style={{ color: \"red\" }}\r\n                          ></i>\r\n                        )}\r\n                      </td>\r\n                      <td>\r\n                        {order.isDelivered ? (\r\n                          order.deliveredAt.subString(0, 10)\r\n                        ) : (\r\n                          <i\r\n                            className=\"fas fa-times\"\r\n                            style={{ color: \"red\" }}\r\n                          ></i>\r\n                        )}\r\n                      </td>\r\n                      <td>\r\n                        <LinkContainer to={`/order/${order._id}`}>\r\n                          <Button className=\"btn-sm\" variant=\"light\">\r\n                            Details\r\n                          </Button>\r\n                        </LinkContainer>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n            ) : (\r\n              <Message variant=\"info\">No Orders</Message>\r\n            )}\r\n            </Col> */}\r\n        </Col>\r\n      </Row>\r\n      {blogs ? (\r\n        <Row>\r\n          {blogs.map((blog) => (\r\n            <Row md={8}>\r\n              <BlogPost blog={blog} />\r\n            </Row>\r\n          ))}\r\n        </Row>\r\n      ) : userInfo.isAuthor & !blogs ? (\r\n        <Message variant=\"info\">No Blog Post</Message>\r\n      ) : (\r\n        !userInfo.isAuthor(<></>)\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n"]},"metadata":{},"sourceType":"module"}