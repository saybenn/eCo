{"ast":null,"code":"import jwt from \"jsonwebtoken\";\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { blogListReducer, blogCommentReducer, blogCommentDeleteReducer, blogPostDeleteReducer, blogLikeReducer, topBlogReducer, myBlogReducer, singleBlogReducer, blogCreateReducer } from \"./reducers/blogReducers.js\";\nimport { productListReducer, productDetailsReducer, topProductsReducer, productReviewReducer, productCreateReducer } from \"./reducers/productReducers.js\";\nimport { userRegisterReducer, userUpdateProfileReducer, userDetailsReducer, userLoginReducer, userListReducer, userDeleteReducer, userUpdateReducer } from \"./reducers/userReducers.js\";\nimport { cartAddReducer, cartGetReducer, cartControlReducer } from \"./reducers/cartReducers.js\";\nimport { orderListReducer, orderCreateReducer, orderDetailsReducer, orderPayReducer, orderDeliverReducer } from \"./reducers/orderReducers.js\";\nconst reducer = combineReducers({\n  blogLike: blogLikeReducer,\n  blogComment: blogCommentReducer,\n  blogList: blogListReducer,\n  blogCommentDelete: blogCommentDeleteReducer,\n  blogDeletePost: blogPostDeleteReducer,\n  myBlogs: myBlogReducer,\n  topBlog: topBlogReducer,\n  singleBlog: singleBlogReducer,\n  createBlog: blogCreateReducer,\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  topProducts: topProductsReducer,\n  productReview: productReviewReducer,\n  productCreate: productCreateReducer,\n  userRegister: userRegisterReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userDetails: userDetailsReducer,\n  userLogin: userLoginReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  cartAdd: cartAddReducer,\n  cartGet: cartGetReducer,\n  cartControl: cartControlReducer,\n  orderList: orderListReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderDeliver: orderDeliverReducer\n});\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\n\nconst checkTokenExpirationMiddleware = () => next => action => {\n  const token = JSON.parse(localStorage.getItem(\"userInfo\")) && JSON.parse(localStorage.getItem(\"userInfo\"))[\"token\"];\n\n  if (token) {\n    if (jwt.decode(token).exp < Date.now() / 1000) {\n      localStorage.removeItem(\"userInfo\");\n      next(action);\n    } else {\n      next(action);\n    }\n  } else {\n    next(action);\n  }\n};\n\nconst middleware = [thunk, checkTokenExpirationMiddleware];\nconst composeEnhance = composeWithDevTools({\n  trace: true,\n  traceLimit: 10\n});\nconst store = createStore(reducer, initialState, composeEnhance(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/elijr/Desktop/CODING/Personal Projects/Portfolio/eco/frontend/src/store.js"],"names":["jwt","createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","blogListReducer","blogCommentReducer","blogCommentDeleteReducer","blogPostDeleteReducer","blogLikeReducer","topBlogReducer","myBlogReducer","singleBlogReducer","blogCreateReducer","productListReducer","productDetailsReducer","topProductsReducer","productReviewReducer","productCreateReducer","userRegisterReducer","userUpdateProfileReducer","userDetailsReducer","userLoginReducer","userListReducer","userDeleteReducer","userUpdateReducer","cartAddReducer","cartGetReducer","cartControlReducer","orderListReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderDeliverReducer","reducer","blogLike","blogComment","blogList","blogCommentDelete","blogDeletePost","myBlogs","topBlog","singleBlog","createBlog","productList","productDetails","topProducts","productReview","productCreate","userRegister","userUpdateProfile","userDetails","userLogin","userList","userDelete","userUpdate","cartAdd","cartGet","cartControl","orderList","orderCreate","orderDetails","orderPay","orderDeliver","userInfoFromStorage","localStorage","getItem","JSON","parse","initialState","userInfo","checkTokenExpirationMiddleware","next","action","token","decode","exp","Date","now","removeItem","middleware","composeEnhance","trace","traceLimit","store"],"mappings":"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","sourcesContent":["import jwt from \"jsonwebtoken\";\r\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n  blogListReducer,\r\n  blogCommentReducer,\r\n  blogCommentDeleteReducer,\r\n  blogPostDeleteReducer,\r\n  blogLikeReducer,\r\n  topBlogReducer,\r\n  myBlogReducer,\r\n  singleBlogReducer,\r\n  blogCreateReducer,\r\n} from \"./reducers/blogReducers.js\";\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n  topProductsReducer,\r\n  productReviewReducer,\r\n  productCreateReducer,\r\n} from \"./reducers/productReducers.js\";\r\nimport {\r\n  userRegisterReducer,\r\n  userUpdateProfileReducer,\r\n  userDetailsReducer,\r\n  userLoginReducer,\r\n  userListReducer,\r\n  userDeleteReducer,\r\n  userUpdateReducer,\r\n} from \"./reducers/userReducers.js\";\r\nimport {\r\n  cartAddReducer,\r\n  cartGetReducer,\r\n  cartControlReducer,\r\n} from \"./reducers/cartReducers.js\";\r\nimport {\r\n  orderListReducer,\r\n  orderCreateReducer,\r\n  orderDetailsReducer,\r\n  orderPayReducer,\r\n  orderDeliverReducer,\r\n} from \"./reducers/orderReducers.js\";\r\n\r\nconst reducer = combineReducers({\r\n  blogLike: blogLikeReducer,\r\n  blogComment: blogCommentReducer,\r\n  blogList: blogListReducer,\r\n  blogCommentDelete: blogCommentDeleteReducer,\r\n  blogDeletePost: blogPostDeleteReducer,\r\n  myBlogs: myBlogReducer,\r\n  topBlog: topBlogReducer,\r\n  singleBlog: singleBlogReducer,\r\n  createBlog: blogCreateReducer,\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  topProducts: topProductsReducer,\r\n  productReview: productReviewReducer,\r\n  productCreate: productCreateReducer,\r\n  userRegister: userRegisterReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  userDetails: userDetailsReducer,\r\n  userLogin: userLoginReducer,\r\n  userList: userListReducer,\r\n  userDelete: userDeleteReducer,\r\n  userUpdate: userUpdateReducer,\r\n  cartAdd: cartAddReducer,\r\n  cartGet: cartGetReducer,\r\n  cartControl: cartControlReducer,\r\n  orderList: orderListReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderDeliver: orderDeliverReducer,\r\n});\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst initialState = { userLogin: { userInfo: userInfoFromStorage } };\r\n\r\nconst checkTokenExpirationMiddleware = () => (next) => (action) => {\r\n  const token =\r\n    JSON.parse(localStorage.getItem(\"userInfo\")) &&\r\n    JSON.parse(localStorage.getItem(\"userInfo\"))[\"token\"];\r\n  if (token) {\r\n    if (jwt.decode(token).exp < Date.now() / 1000) {\r\n      localStorage.removeItem(\"userInfo\");\r\n      next(action);\r\n    } else {\r\n      next(action);\r\n    }\r\n  } else {\r\n    next(action);\r\n  }\r\n};\r\n\r\nconst middleware = [thunk, checkTokenExpirationMiddleware];\r\n\r\nconst composeEnhance = composeWithDevTools({\r\n  trace: true,\r\n  traceLimit: 10,\r\n});\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeEnhance(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}