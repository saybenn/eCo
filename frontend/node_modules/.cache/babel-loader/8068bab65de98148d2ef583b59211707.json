{"ast":null,"code":"import { ADD_ITEM_CART_FAIL, ADD_ITEM_CART_REQUEST, ADD_ITEM_CART_SUCCESS, GET_CART_FAIL, GET_CART_REQUEST, GET_CART_SUCCESS } from \"../constants/cartConstants\";\nexport const addItemToCart = cartItem => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ADD_ITEM_CART_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/cart\", cartItem, config);\n    dispatch({\n      type: ADD_ITEM_CART_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ADD_ITEM_CART_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateCart = cartItem => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: UPDATE_CART_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(\"/api/cart\", cartItem, config);\n    dispatch({\n      type: UPDATE_CART_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_CART_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getCart = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: GET_CART_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(\"/api/cart\", {}, config);\n    dispatch({\n      type: GET_CART_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_CART_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/elijr/Desktop/CODING/Personal Projects/Portfolio/eco/frontend/src/actions/cartActions.js"],"names":["ADD_ITEM_CART_FAIL","ADD_ITEM_CART_REQUEST","ADD_ITEM_CART_SUCCESS","GET_CART_FAIL","GET_CART_REQUEST","GET_CART_SUCCESS","addItemToCart","cartItem","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","axios","post","payload","error","response","message","updateCart","UPDATE_CART_REQUEST","put","UPDATE_CART_SUCCESS","UPDATE_CART_FAIL","getCart","get"],"mappings":"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","sourcesContent":["import {\r\n  ADD_ITEM_CART_FAIL,\r\n  ADD_ITEM_CART_REQUEST,\r\n  ADD_ITEM_CART_SUCCESS,\r\n  GET_CART_FAIL,\r\n  GET_CART_REQUEST,\r\n  GET_CART_SUCCESS,\r\n} from \"../constants/cartConstants\";\r\n\r\nexport const addItemToCart = (cartItem) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ADD_ITEM_CART_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\"/api/cart\", cartItem, config);\r\n\r\n    dispatch({ type: ADD_ITEM_CART_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ADD_ITEM_CART_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateCart = (cartItem) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: UPDATE_CART_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\"/api/cart\", cartItem, config);\r\n\r\n    dispatch({ type: UPDATE_CART_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: UPDATE_CART_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getCart = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: GET_CART_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(\"/api/cart\", {}, config);\r\n\r\n    dispatch({ type: GET_CART_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_CART_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}