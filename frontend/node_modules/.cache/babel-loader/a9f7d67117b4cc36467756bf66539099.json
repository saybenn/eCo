{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elijr\\\\Desktop\\\\CODING\\\\Personal Projects\\\\Portfolio\\\\eco\\\\frontend\\\\src\\\\screens\\\\ProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Col, Row, Form, Table } from \"react-bootstrap\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { updateProfile } from \"../actions/userActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProfileScreen = () => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [authorRequest, setAuthorRequest] = useState(false);\n  const [message, setMessage] = useState(null);\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n  const {\n    success\n  } = userUpdateProfile;\n  const myOrders = useSelector(state => state.myOrders);\n  const {\n    loading: orderLoading,\n    error: orderError,\n    orders\n  } = myOrders;\n  useEffect(() => {\n    if (userInfo) {\n      history.push(\"/login\");\n    } else {\n      if (!user || user.name || success) {\n        dispatch({\n          type: USER_UPDATE_PROFILE_RESET\n        });\n        dispatch(getUserDetails());\n        dispatch(listMyOrders());\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [dispatch, userInfo, success, user, orders]);\n\n  const toggleAuthor = () => {\n    if (!authorRequest) {\n      setAuthorRequest(true);\n    } else {\n      setAuthorRequest(false);\n    }\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      setMessage(\"Passwords do not match\");\n    } else {\n      dispatch(updateProfile(name, email, password, authorRequest));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"User Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 23\n        }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"alert\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 23\n        }, this), success && /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"success\",\n          children: \"Profile Updated\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: submitHandler,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"name\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"name\",\n              value: name,\n              placeholder: \"Enter name\",\n              onChange: e => setName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              value: email,\n              placeholder: \"Enter email\",\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              value: password,\n              placeholder: \"Enter password\",\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"confirmPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"confirmPassword\",\n              value: confirmPassword,\n              placeholder: \"Enter Password\",\n              onChange: e => setConfirmPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: 1,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: toggleAuthor(),\n                variant: !authorRequest ? \"secondary\" : \"success\",\n                children: \"Request Author\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 1,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"primary\",\n                children: \"Update Profile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 9,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"My Orders\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), orderLoading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 30\n          }, this), orderError && /*#__PURE__*/_jsxDEV(Message, {\n            variant: \"danger\",\n            children: orderError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 28\n          }, this), orders ? /*#__PURE__*/_jsxDEV(Table, {\n            striped: true,\n            bordered: true,\n            hover: true,\n            responsive: true,\n            className: \"table-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"DATE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"TOTAL\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"PAID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"DELIVERED\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: orders.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: order._id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: order.createdAt.substring(0, 10)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: order.totalPrice\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: order.isPaid ? order.paidAt.subString(0, 10) : /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-times\",\n                    style: {\n                      color: \"red\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 149,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: order.isDelivered ? order.deliveredAt.subString(0, 10) : /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-times\",\n                    style: {\n                      color: \"red\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(LinkContainer, {\n                    to: `/order/${order._id}`,\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      className: \"btn-sm\",\n                      variant: \"light\",\n                      children: \"Details\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 167,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 23\n                }, this)]\n              }, order._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Message, {\n            variant: \"info\",\n            children: \"No Orders\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), blogs && /*#__PURE__*/_jsxDEV(Row, {\n      children: blogs.map(blog => /*#__PURE__*/_jsxDEV(Row, {\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(BlogPost, {\n          blog: blog\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ProfileScreen, \"pR+Lr0WlN8eMbq4GjPsIhyS9do4=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = ProfileScreen;\nexport default ProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"sources":["C:/Users/elijr/Desktop/CODING/Personal Projects/Portfolio/eco/frontend/src/screens/ProfileScreen.js"],"names":["React","useState","useSelector","useDispatch","Col","Row","Form","Table","Loader","Message","updateProfile","ProfileScreen","name","setName","password","setPassword","email","setEmail","confirmPassword","setConfirmPassword","authorRequest","setAuthorRequest","message","setMessage","dispatch","userDetails","state","loading","error","user","userLogin","userInfo","userUpdateProfile","success","myOrders","orderLoading","orderError","orders","useEffect","history","push","type","USER_UPDATE_PROFILE_RESET","getUserDetails","listMyOrders","toggleAuthor","submitHandler","e","preventDefault","target","value","map","order","_id","createdAt","substring","totalPrice","isPaid","paidAt","subString","color","isDelivered","deliveredAt","blogs","blog"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Col, Row, Form, Table } from \"react-bootstrap\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { updateProfile } from \"../actions/userActions\";\r\n\r\nconst ProfileScreen = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [authorRequest, setAuthorRequest] = useState(false);\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  const myOrders = useSelector((state) => state.myOrders);\r\n  const { loading: orderLoading, error: orderError, orders } = myOrders;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      if (!user || user.name || success) {\r\n        dispatch({ type: USER_UPDATE_PROFILE_RESET });\r\n        dispatch(getUserDetails());\r\n        dispatch(listMyOrders());\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n  }, [dispatch, userInfo, success, user, orders]);\r\n\r\n  const toggleAuthor = () => {\r\n    if (!authorRequest) {\r\n      setAuthorRequest(true);\r\n    } else {\r\n      setAuthorRequest(false);\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      dispatch(updateProfile(name, email, password, authorRequest));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col md={3}>\r\n          <h1>User Profile</h1>\r\n          {loading && <Loader />}\r\n          {error && <Message variant=\"danger\">{error}</Message>}\r\n          {message && <Message variant=\"alert\">{message}</Message>}\r\n          {success && <Message variant=\"success\">Profile Updated</Message>}\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"name\"\r\n                value={name}\r\n                placeholder=\"Enter name\"\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                value={email}\r\n                placeholder=\"Enter email\"\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                value={password}\r\n                placeholder=\"Enter password\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"confirmPassword\">\r\n              <Form.Label>Confirm Password</Form.Label>\r\n              <Form.Control\r\n                type=\"confirmPassword\"\r\n                value={confirmPassword}\r\n                placeholder=\"Enter Password\"\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Row>\r\n              <Col md={1}>\r\n                <Button\r\n                  onClick={toggleAuthor()}\r\n                  variant={!authorRequest ? \"secondary\" : \"success\"}\r\n                >\r\n                  Request Author\r\n                </Button>\r\n              </Col>\r\n              <Col md={1}>\r\n                <Button type=\"submit\" variant=\"primary\">\r\n                  Update Profile\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n          <Col md={9}>\r\n            <h2>My Orders</h2>\r\n            {orderLoading && <Loader />}\r\n            {orderError && <Message variant=\"danger\">{orderError}</Message>}\r\n            {orders ? (\r\n              <Table striped bordered hover responsive className=\"table-sm\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>DATE</th>\r\n                    <th>TOTAL</th>\r\n                    <th>PAID</th>\r\n                    <th>DELIVERED</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {orders.map((order) => (\r\n                    <tr key={order._id}>\r\n                      <td>{order._id}</td>\r\n                      <td>{order.createdAt.substring(0, 10)}</td>\r\n                      <td>{order.totalPrice}</td>\r\n                      <td>\r\n                        {order.isPaid ? (\r\n                          order.paidAt.subString(0, 10)\r\n                        ) : (\r\n                          <i\r\n                            className=\"fas fa-times\"\r\n                            style={{ color: \"red\" }}\r\n                          ></i>\r\n                        )}\r\n                      </td>\r\n                      <td>\r\n                        {order.isDelivered ? (\r\n                          order.deliveredAt.subString(0, 10)\r\n                        ) : (\r\n                          <i\r\n                            className=\"fas fa-times\"\r\n                            style={{ color: \"red\" }}\r\n                          ></i>\r\n                        )}\r\n                      </td>\r\n                      <td>\r\n                        <LinkContainer to={`/order/${order._id}`}>\r\n                          <Button className=\"btn-sm\" variant=\"light\">\r\n                            Details\r\n                          </Button>\r\n                        </LinkContainer>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n            ) : (\r\n              <Message variant=\"info\">No Orders</Message>\r\n            )}\r\n          </Col>\r\n        </Col>\r\n      </Row>\r\n      {blogs && (\r\n        <Row>\r\n          {blogs.map((blog) => (\r\n            <Row md={8}>\r\n              <BlogPost blog={blog} />\r\n            </Row>\r\n          ))}\r\n        </Row>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n"]},"metadata":{},"sourceType":"module"}