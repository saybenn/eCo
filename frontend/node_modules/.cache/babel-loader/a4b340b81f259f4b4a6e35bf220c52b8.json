{"ast":null,"code":"import jwt from \"jsonwebtoken\";\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { blogListReducer, blogCommentReducer, blogLikeReducer, topBlogReducer } from \"./reducers/blogReducers.js\";\nimport { productListReducer, productDetailsReducer, topProductsReducer, productReviewReducer } from \"./reducers/productReducers.js\";\nimport { userRegisterReducer, userAddItemCartReducer, userGetCartReducer, userUpdateProfileReducer, userDetailsReducer, userLoginReducer } from \"./reducers/userReducers.js\";\nconst reducer = combineReducers({\n  blogLike: blogLikeReducer,\n  blogComment: blogCommentReducer,\n  blogList: blogListReducer,\n  topBlog: topBlogReducer,\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  topProducts: topProductsReducer,\n  productReview: productReviewReducer,\n  userRegiser: userRegisterReducer,\n  userAddItemCart: userAddItemCartReducer,\n  userGetCart: userGetCartReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userDetail: userDetailsReducer,\n  userLogin: userLoginReducer\n});\nconst initialState = {};\n\nconst checkTokenExpirationMiddleware = () => next => action => {\n  const token = JSON.parse(localStorage.getItem(\"userInfo\")) && JSON.parse(localStorage.getItem(\"userInfo\"))[\"token\"];\n\n  if (token) {\n    if (jwt.decode(token).exp < Date.now() / 1000) {\n      localStorage.removeItem(\"userInfo\");\n      next(action);\n    } else {\n      next(action);\n    }\n  } else {\n    next(action);\n  }\n};\n\nconst middleware = [thunk, checkTokenExpirationMiddleware];\nconst composeEnhance = composeWithDevTools({\n  trace: true,\n  traceLimit: 10\n});\nconst store = createStore(reducer, initialState, composeEnhance(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/elijr/Desktop/CODING/Personal Projects/Portfolio/eco/frontend/src/store.js"],"names":["jwt","createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","blogListReducer","blogCommentReducer","blogLikeReducer","topBlogReducer","productListReducer","productDetailsReducer","topProductsReducer","productReviewReducer","userRegisterReducer","userAddItemCartReducer","userGetCartReducer","userUpdateProfileReducer","userDetailsReducer","userLoginReducer","reducer","blogLike","blogComment","blogList","topBlog","productList","productDetails","topProducts","productReview","userRegiser","userAddItemCart","userGetCart","userUpdateProfile","userDetail","userLogin","initialState","checkTokenExpirationMiddleware","next","action","token","JSON","parse","localStorage","getItem","decode","exp","Date","now","removeItem","middleware","composeEnhance","trace","traceLimit","store"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,cAAhB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACEC,eADF,EAEEC,kBAFF,EAGEC,eAHF,EAIEC,cAJF,QAKO,4BALP;AAMA,SACEC,kBADF,EAEEC,qBAFF,EAGEC,kBAHF,EAIEC,oBAJF,QAKO,+BALP;AAMA,SACEC,mBADF,EAEEC,sBAFF,EAGEC,kBAHF,EAIEC,wBAJF,EAKEC,kBALF,EAMEC,gBANF,QAOO,4BAPP;AASA,MAAMC,OAAO,GAAGlB,eAAe,CAAC;AAC9BmB,EAAAA,QAAQ,EAAEb,eADoB;AAE9Bc,EAAAA,WAAW,EAAEf,kBAFiB;AAG9BgB,EAAAA,QAAQ,EAAEjB,eAHoB;AAI9BkB,EAAAA,OAAO,EAAEf,cAJqB;AAK9BgB,EAAAA,WAAW,EAAEf,kBALiB;AAM9BgB,EAAAA,cAAc,EAAEf,qBANc;AAO9BgB,EAAAA,WAAW,EAAEf,kBAPiB;AAQ9BgB,EAAAA,aAAa,EAAEf,oBARe;AAS9BgB,EAAAA,WAAW,EAAEf,mBATiB;AAU9BgB,EAAAA,eAAe,EAAEf,sBAVa;AAW9BgB,EAAAA,WAAW,EAAEf,kBAXiB;AAY9BgB,EAAAA,iBAAiB,EAAEf,wBAZW;AAa9BgB,EAAAA,UAAU,EAAEf,kBAbkB;AAc9BgB,EAAAA,SAAS,EAAEf;AAdmB,CAAD,CAA/B;AAiBA,MAAMgB,YAAY,GAAG,EAArB;;AAEA,MAAMC,8BAA8B,GAAG,MAAOC,IAAD,IAAWC,MAAD,IAAY;AACjE,QAAMC,KAAK,GACTC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,KACAH,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,EAA6C,OAA7C,CAFF;;AAGA,MAAIJ,KAAJ,EAAW;AACT,QAAIvC,GAAG,CAAC4C,MAAJ,CAAWL,KAAX,EAAkBM,GAAlB,GAAwBC,IAAI,CAACC,GAAL,KAAa,IAAzC,EAA+C;AAC7CL,MAAAA,YAAY,CAACM,UAAb,CAAwB,UAAxB;AAEAX,MAAAA,IAAI,CAACC,MAAD,CAAJ;AACD,KAJD,MAIO;AACLD,MAAAA,IAAI,CAACC,MAAD,CAAJ;AACD;AACF,GARD,MAQO;AACLD,IAAAA,IAAI,CAACC,MAAD,CAAJ;AACD;AACF,CAfD;;AAiBA,MAAMW,UAAU,GAAG,CAAC7C,KAAD,EAAQgC,8BAAR,CAAnB;AAEA,MAAMc,cAAc,GAAG7C,mBAAmB,CAAC;AACzC8C,EAAAA,KAAK,EAAE,IADkC;AAEzCC,EAAAA,UAAU,EAAE;AAF6B,CAAD,CAA1C;AAKA,MAAMC,KAAK,GAAGpD,WAAW,CACvBmB,OADuB,EAEvBe,YAFuB,EAGvBe,cAAc,CAAC/C,eAAe,CAAC,GAAG8C,UAAJ,CAAhB,CAHS,CAAzB;AAMA,eAAeI,KAAf","sourcesContent":["import jwt from \"jsonwebtoken\";\r\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n  blogListReducer,\r\n  blogCommentReducer,\r\n  blogLikeReducer,\r\n  topBlogReducer,\r\n} from \"./reducers/blogReducers.js\";\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n  topProductsReducer,\r\n  productReviewReducer,\r\n} from \"./reducers/productReducers.js\";\r\nimport {\r\n  userRegisterReducer,\r\n  userAddItemCartReducer,\r\n  userGetCartReducer,\r\n  userUpdateProfileReducer,\r\n  userDetailsReducer,\r\n  userLoginReducer,\r\n} from \"./reducers/userReducers.js\";\r\n\r\nconst reducer = combineReducers({\r\n  blogLike: blogLikeReducer,\r\n  blogComment: blogCommentReducer,\r\n  blogList: blogListReducer,\r\n  topBlog: topBlogReducer,\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  topProducts: topProductsReducer,\r\n  productReview: productReviewReducer,\r\n  userRegiser: userRegisterReducer,\r\n  userAddItemCart: userAddItemCartReducer,\r\n  userGetCart: userGetCartReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  userDetail: userDetailsReducer,\r\n  userLogin: userLoginReducer,\r\n});\r\n\r\nconst initialState = {};\r\n\r\nconst checkTokenExpirationMiddleware = () => (next) => (action) => {\r\n  const token =\r\n    JSON.parse(localStorage.getItem(\"userInfo\")) &&\r\n    JSON.parse(localStorage.getItem(\"userInfo\"))[\"token\"];\r\n  if (token) {\r\n    if (jwt.decode(token).exp < Date.now() / 1000) {\r\n      localStorage.removeItem(\"userInfo\");\r\n\r\n      next(action);\r\n    } else {\r\n      next(action);\r\n    }\r\n  } else {\r\n    next(action);\r\n  }\r\n};\r\n\r\nconst middleware = [thunk, checkTokenExpirationMiddleware];\r\n\r\nconst composeEnhance = composeWithDevTools({\r\n  trace: true,\r\n  traceLimit: 10,\r\n});\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeEnhance(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}