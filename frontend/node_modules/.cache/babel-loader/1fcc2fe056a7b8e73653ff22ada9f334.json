{"ast":null,"code":"import _slicedToArray from\"C:/Users/elijr/Desktop/CODING/Personal Projects/Portfolio/eco/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{Form,Button,Card}from\"react-bootstrap\";import{useDispatch,useSelector}from\"react-redux\";import{useNavigate}from\"react-router-dom\";import Container from\"../components/Container\";import FormContainer from\"../components/FormContainer\";import CheckoutSteps from\"../components/CheckoutSteps\";import{getUserProfile,saveShippingAddress}from\"../actions/userActions\";import{ORDER_CREATE_RESET,ORDER_DETAILS_RESET}from\"../constants/orderConstants\";import{createOrder,updateOrder}from\"../actions/orderActions\";import Message from\"../components/Message\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var ShippingScreen=function ShippingScreen(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),address=_useState2[0],setAddress=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),state=_useState4[0],setState=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),city=_useState6[0],setCity=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),postalCode=_useState8[0],setPostalCode=_useState8[1];var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),country=_useState10[0],setCountry=_useState10[1];var navigate=useNavigate();var dispatch=useDispatch();var userProfile=useSelector(function(state){return state.userProfile;});var profile=userProfile.profile;var orderCreate=useSelector(function(state){return state.orderCreate;});var error=orderCreate.error,order=orderCreate.order;var orderDetails=useSelector(function(state){return state.orderDetails;});var detailsOrder=orderDetails.order;useEffect(function(){if(!profile){dispatch(getUserProfile());}if(profile){setAddress(profile.shippingAddress.address);setState(profile.shippingAddress.state);setCity(profile.shippingAddress.city);setPostalCode(profile.shippingAddress.postalCode);setCountry(profile.shippingAddress.country);}if(order){navigate(\"/order/\".concat(order._id));}},[dispatch,profile,order]);var submitHandler=function submitHandler(e){e.preventDefault();dispatch(saveShippingAddress(address,city,state,postalCode,country));if(!order){dispatch(createOrder(profile));}if(detailsOrder){dispatch(updateOrder(detailsOrder._id,{address:address,city:city,state:state,postalCode:postalCode,country:country}));navigate(\"/order/\".concat(detailsOrder._id));}};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsxs(FormContainer,{children:[error&&/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:error}),/*#__PURE__*/_jsx(CheckoutSteps,{step1:true,step2:true}),/*#__PURE__*/_jsx(\"h1\",{children:\"Shipping\"}),/*#__PURE__*/_jsx(Card,{className:\"p-3\",children:/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"address\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Address\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",value:address,placeholder:\"Enter address\",required:true,onChange:function onChange(e){return setAddress(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"city\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"City\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",value:city,placeholder:\"Enter city\",required:true,onChange:function onChange(e){return setCity(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"state\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"State\"}),/*#__PURE__*/_jsxs(Form.Select,{value:state,placeholder:\"Enter state\",required:true,onChange:function onChange(e){return setState(e.target.value);},children:[/*#__PURE__*/_jsx(\"option\",{value:\"AL\",children:\"Alabama\"}),/*#__PURE__*/_jsx(\"option\",{value:\"AK\",children:\"Alaska\"}),/*#__PURE__*/_jsx(\"option\",{value:\"AZ\",children:\"Arizona\"}),/*#__PURE__*/_jsx(\"option\",{value:\"AR\",children:\"Arkansas\"}),/*#__PURE__*/_jsx(\"option\",{value:\"CA\",children:\"California\"}),/*#__PURE__*/_jsx(\"option\",{value:\"CO\",children:\"Colorado\"}),/*#__PURE__*/_jsx(\"option\",{value:\"CT\",children:\"Connecticut\"}),/*#__PURE__*/_jsx(\"option\",{value:\"DE\",children:\"Delaware\"}),/*#__PURE__*/_jsx(\"option\",{value:\"DC\",children:\"District Of Columbia\"}),/*#__PURE__*/_jsx(\"option\",{value:\"FL\",children:\"Florida\"}),/*#__PURE__*/_jsx(\"option\",{value:\"GA\",children:\"Georgia\"}),/*#__PURE__*/_jsx(\"option\",{value:\"HI\",children:\"Hawaii\"}),/*#__PURE__*/_jsx(\"option\",{value:\"ID\",children:\"Idaho\"}),/*#__PURE__*/_jsx(\"option\",{value:\"IL\",children:\"Illinois\"}),/*#__PURE__*/_jsx(\"option\",{value:\"IN\",children:\"Indiana\"}),/*#__PURE__*/_jsx(\"option\",{value:\"IA\",children:\"Iowa\"}),/*#__PURE__*/_jsx(\"option\",{value:\"KS\",children:\"Kansas\"}),/*#__PURE__*/_jsx(\"option\",{value:\"KY\",children:\"Kentucky\"}),/*#__PURE__*/_jsx(\"option\",{value:\"LA\",children:\"Louisiana\"}),/*#__PURE__*/_jsx(\"option\",{value:\"ME\",children:\"Maine\"}),/*#__PURE__*/_jsx(\"option\",{value:\"MD\",children:\"Maryland\"}),/*#__PURE__*/_jsx(\"option\",{value:\"MA\",children:\"Massachusetts\"}),/*#__PURE__*/_jsx(\"option\",{value:\"MI\",children:\"Michigan\"}),/*#__PURE__*/_jsx(\"option\",{value:\"MN\",children:\"Minnesota\"}),/*#__PURE__*/_jsx(\"option\",{value:\"MS\",children:\"Mississippi\"}),/*#__PURE__*/_jsx(\"option\",{value:\"MO\",children:\"Missouri\"}),/*#__PURE__*/_jsx(\"option\",{value:\"MT\",children:\"Montana\"}),/*#__PURE__*/_jsx(\"option\",{value:\"NE\",children:\"Nebraska\"}),/*#__PURE__*/_jsx(\"option\",{value:\"NV\",children:\"Nevada\"}),/*#__PURE__*/_jsx(\"option\",{value:\"NH\",children:\"New Hampshire\"}),/*#__PURE__*/_jsx(\"option\",{value:\"NJ\",children:\"New Jersey\"}),/*#__PURE__*/_jsx(\"option\",{value:\"NM\",children:\"New Mexico\"}),/*#__PURE__*/_jsx(\"option\",{value:\"NY\",children:\"New York\"}),/*#__PURE__*/_jsx(\"option\",{value:\"NC\",children:\"North Carolina\"}),/*#__PURE__*/_jsx(\"option\",{value:\"ND\",children:\"North Dakota\"}),/*#__PURE__*/_jsx(\"option\",{value:\"OH\",children:\"Ohio\"}),/*#__PURE__*/_jsx(\"option\",{value:\"OK\",children:\"Oklahoma\"}),/*#__PURE__*/_jsx(\"option\",{value:\"OR\",children:\"Oregon\"}),/*#__PURE__*/_jsx(\"option\",{value:\"PA\",children:\"Pennsylvania\"}),/*#__PURE__*/_jsx(\"option\",{value:\"RI\",children:\"Rhode Island\"}),/*#__PURE__*/_jsx(\"option\",{value:\"SC\",children:\"South Carolina\"}),/*#__PURE__*/_jsx(\"option\",{value:\"SD\",children:\"South Dakota\"}),/*#__PURE__*/_jsx(\"option\",{value:\"TN\",children:\"Tennessee\"}),/*#__PURE__*/_jsx(\"option\",{value:\"TX\",children:\"Texas\"}),/*#__PURE__*/_jsx(\"option\",{value:\"UT\",children:\"Utah\"}),/*#__PURE__*/_jsx(\"option\",{value:\"VT\",children:\"Vermont\"}),/*#__PURE__*/_jsx(\"option\",{value:\"VA\",children:\"Virginia\"}),/*#__PURE__*/_jsx(\"option\",{value:\"WA\",children:\"Washington\"}),/*#__PURE__*/_jsx(\"option\",{value:\"WV\",children:\"West Virginia\"}),/*#__PURE__*/_jsx(\"option\",{value:\"WI\",children:\"Wisconsin\"}),/*#__PURE__*/_jsx(\"option\",{value:\"WY\",children:\"Wyoming\"})]})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"postalCode\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Postal Code\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",value:postalCode,placeholder:\"Enter postal code\",required:true,onChange:function onChange(e){return setPostalCode(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"country\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Country\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",value:country,placeholder:\"Enter country\",required:true,onChange:function onChange(e){return setCountry(e.target.value);}})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",children:\"Continue\"})]})})]})})});};export default ShippingScreen;","map":{"version":3,"sources":["C:/Users/elijr/Desktop/CODING/Personal Projects/Portfolio/eco/frontend/src/screens/ShippingScreen.js"],"names":["React","useState","useEffect","Form","Button","Card","useDispatch","useSelector","useNavigate","Container","FormContainer","CheckoutSteps","getUserProfile","saveShippingAddress","ORDER_CREATE_RESET","ORDER_DETAILS_RESET","createOrder","updateOrder","Message","ShippingScreen","address","setAddress","state","setState","city","setCity","postalCode","setPostalCode","country","setCountry","navigate","dispatch","userProfile","profile","orderCreate","error","order","orderDetails","detailsOrder","shippingAddress","_id","submitHandler","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Card } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Container from \"../components/Container\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { getUserProfile, saveShippingAddress } from \"../actions/userActions\";\r\nimport {\r\n  ORDER_CREATE_RESET,\r\n  ORDER_DETAILS_RESET,\r\n} from \"../constants/orderConstants\";\r\nimport { createOrder, updateOrder } from \"../actions/orderActions\";\r\nimport Message from \"../components/Message\";\r\n\r\nconst ShippingScreen = () => {\r\n  const [address, setAddress] = useState(\"\");\r\n  const [state, setState] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [postalCode, setPostalCode] = useState(\"\");\r\n  const [country, setCountry] = useState(\"\");\r\n\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const userProfile = useSelector((state) => state.userProfile);\r\n  const { profile } = userProfile;\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { error, order } = orderCreate;\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { order: detailsOrder } = orderDetails;\r\n\r\n  useEffect(() => {\r\n    if (!profile) {\r\n      dispatch(getUserProfile());\r\n    }\r\n    if (profile) {\r\n      setAddress(profile.shippingAddress.address);\r\n      setState(profile.shippingAddress.state);\r\n      setCity(profile.shippingAddress.city);\r\n      setPostalCode(profile.shippingAddress.postalCode);\r\n      setCountry(profile.shippingAddress.country);\r\n    }\r\n\r\n    if (order) {\r\n      navigate(`/order/${order._id}`);\r\n    }\r\n  }, [dispatch, profile, order]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(saveShippingAddress(address, city, state, postalCode, country));\r\n    if (!order) {\r\n      dispatch(createOrder(profile));\r\n    }\r\n\r\n    if (detailsOrder) {\r\n      dispatch(\r\n        updateOrder(detailsOrder._id, {\r\n          address,\r\n          city,\r\n          state,\r\n          postalCode,\r\n          country,\r\n        })\r\n      );\r\n      navigate(`/order/${detailsOrder._id}`);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Container>\r\n        <FormContainer>\r\n          {error && <Message variant=\"danger\">{error}</Message>}\r\n          <CheckoutSteps step1 step2 />\r\n          <h1>Shipping</h1>\r\n          <Card className=\"p-3\">\r\n            <Form onSubmit={submitHandler}>\r\n              <Form.Group controlId=\"address\">\r\n                <Form.Label>Address</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={address}\r\n                  placeholder=\"Enter address\"\r\n                  required\r\n                  onChange={(e) => setAddress(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"city\">\r\n                <Form.Label>City</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={city}\r\n                  placeholder=\"Enter city\"\r\n                  required\r\n                  onChange={(e) => setCity(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"state\">\r\n                <Form.Label>State</Form.Label>\r\n                <Form.Select\r\n                  value={state}\r\n                  placeholder=\"Enter state\"\r\n                  required\r\n                  onChange={(e) => setState(e.target.value)}\r\n                >\r\n                  <option value=\"AL\">Alabama</option>\r\n                  <option value=\"AK\">Alaska</option>\r\n                  <option value=\"AZ\">Arizona</option>\r\n                  <option value=\"AR\">Arkansas</option>\r\n                  <option value=\"CA\">California</option>\r\n                  <option value=\"CO\">Colorado</option>\r\n                  <option value=\"CT\">Connecticut</option>\r\n                  <option value=\"DE\">Delaware</option>\r\n                  <option value=\"DC\">District Of Columbia</option>\r\n                  <option value=\"FL\">Florida</option>\r\n                  <option value=\"GA\">Georgia</option>\r\n                  <option value=\"HI\">Hawaii</option>\r\n                  <option value=\"ID\">Idaho</option>\r\n                  <option value=\"IL\">Illinois</option>\r\n                  <option value=\"IN\">Indiana</option>\r\n                  <option value=\"IA\">Iowa</option>\r\n                  <option value=\"KS\">Kansas</option>\r\n                  <option value=\"KY\">Kentucky</option>\r\n                  <option value=\"LA\">Louisiana</option>\r\n                  <option value=\"ME\">Maine</option>\r\n                  <option value=\"MD\">Maryland</option>\r\n                  <option value=\"MA\">Massachusetts</option>\r\n                  <option value=\"MI\">Michigan</option>\r\n                  <option value=\"MN\">Minnesota</option>\r\n                  <option value=\"MS\">Mississippi</option>\r\n                  <option value=\"MO\">Missouri</option>\r\n                  <option value=\"MT\">Montana</option>\r\n                  <option value=\"NE\">Nebraska</option>\r\n                  <option value=\"NV\">Nevada</option>\r\n                  <option value=\"NH\">New Hampshire</option>\r\n                  <option value=\"NJ\">New Jersey</option>\r\n                  <option value=\"NM\">New Mexico</option>\r\n                  <option value=\"NY\">New York</option>\r\n                  <option value=\"NC\">North Carolina</option>\r\n                  <option value=\"ND\">North Dakota</option>\r\n                  <option value=\"OH\">Ohio</option>\r\n                  <option value=\"OK\">Oklahoma</option>\r\n                  <option value=\"OR\">Oregon</option>\r\n                  <option value=\"PA\">Pennsylvania</option>\r\n                  <option value=\"RI\">Rhode Island</option>\r\n                  <option value=\"SC\">South Carolina</option>\r\n                  <option value=\"SD\">South Dakota</option>\r\n                  <option value=\"TN\">Tennessee</option>\r\n                  <option value=\"TX\">Texas</option>\r\n                  <option value=\"UT\">Utah</option>\r\n                  <option value=\"VT\">Vermont</option>\r\n                  <option value=\"VA\">Virginia</option>\r\n                  <option value=\"WA\">Washington</option>\r\n                  <option value=\"WV\">West Virginia</option>\r\n                  <option value=\"WI\">Wisconsin</option>\r\n                  <option value=\"WY\">Wyoming</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"postalCode\">\r\n                <Form.Label>Postal Code</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={postalCode}\r\n                  placeholder=\"Enter postal code\"\r\n                  required\r\n                  onChange={(e) => setPostalCode(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"country\">\r\n                <Form.Label>Country</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={country}\r\n                  placeholder=\"Enter country\"\r\n                  required\r\n                  onChange={(e) => setCountry(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Button type=\"submit\" variant=\"primary\">\r\n                Continue\r\n              </Button>\r\n            </Form>\r\n          </Card>\r\n        </FormContainer>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShippingScreen;\r\n"]},"metadata":{},"sourceType":"module"}