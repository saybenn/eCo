{"ast":null,"code":"import axios from \"axios\";\nimport { LOGIN_USER_FAIL, LOGIN_USER_REQUEST, LOGIN_USER_SUCCESS, LOGOUT_USER_FAIL, LOGOUT_USER_SUCCESS, REGISTER_USER_FAIL, REGISTER_USER_REQUEST, REGISTER_USER_SUCCESS, UPDATE_PROFILE_FAIL, UPDATE_PROFILE_REQUEST, UPDATE_PROFILE_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_PAYMENT_METHOD_SAVE, USER_SHIPPING_SAVE_FAIL, USER_SHIPPING_SAVE_REQUEST, USER_SHIPPING_SAVE_SUCCESS, USER_LIST_SUCCESS, USER_LIST_FAIL, USER_LIST_REQUEST, USER_DELETE_FAIL, USER_DELETE_SUCCESS, USER_DELETE_REQUEST, USER_UPDATE_FAIL, USER_UPDATE_SUCCESS, USER_UPDATE_REQUEST } from \"../constants/userConstants\";\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: REGISTER_USER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/users\", {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: REGISTER_USER_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: REGISTER_USER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: LOGIN_USER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/users/login\", {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: LOGIN_USER_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: LOGIN_USER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logout = () => async dispatch => {\n  try {\n    localStorage.removeItem(\"userInfo\");\n    dispatch({\n      type: LOGOUT_USER_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: LOGOUT_USER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users`, config);\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const deleteUser = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.delete(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const requestAuthorship = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_AUTHOR_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/${id}/author`, {}, config);\n    dispatch({\n      type: USER_AUTHOR_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_AUTHOR_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateUser = (id, name, email, isAdmin, isAuthor) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/${id}`, {\n      name,\n      email,\n      isAdmin,\n      isAuthor\n    }, config);\n    dispatch({\n      type: USER_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateProfile = function (name, email, password) {\n  let authorRequest = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  return async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: UPDATE_PROFILE_REQUEST\n      });\n      const {\n        userLogin: {\n          userInfo\n        }\n      } = getState();\n      const config = {\n        headers: {\n          Authorization: `Bearer ${userInfo.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.put(`/api/users/profile`, {\n        name,\n        email,\n        password,\n        authorRequest\n      }, config);\n      dispatch({\n        type: UPDATE_PROFILE_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: UPDATE_PROFILE_FAIL,\n        payload: error.response && error.response.data.message ? error.response.data.message : error.message\n      });\n    }\n  };\n};\nexport const saveShippingAddress = (address, city, state, postalCode, country) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_SHIPPING_SAVE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(\"/api/users/shipping\", {\n      address,\n      city,\n      state,\n      postalCode,\n      country\n    }, config);\n    dispatch({\n      type: USER_SHIPPING_SAVE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_SHIPPING_SAVE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const savePaymentMethod = data => async dispatch => {\n  dispatch({\n    type: USER_PAYMENT_METHOD_SAVE,\n    payload: data\n  });\n};","map":{"version":3,"sources":["C:/Users/elijr/Desktop/CODING/Personal Projects/Portfolio/eco/frontend/src/actions/userActions.js"],"names":["axios","LOGIN_USER_FAIL","LOGIN_USER_REQUEST","LOGIN_USER_SUCCESS","LOGOUT_USER_FAIL","LOGOUT_USER_SUCCESS","REGISTER_USER_FAIL","REGISTER_USER_REQUEST","REGISTER_USER_SUCCESS","UPDATE_PROFILE_FAIL","UPDATE_PROFILE_REQUEST","UPDATE_PROFILE_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_PAYMENT_METHOD_SAVE","USER_SHIPPING_SAVE_FAIL","USER_SHIPPING_SAVE_REQUEST","USER_SHIPPING_SAVE_SUCCESS","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_REQUEST","USER_DELETE_FAIL","USER_DELETE_SUCCESS","USER_DELETE_REQUEST","USER_UPDATE_FAIL","USER_UPDATE_SUCCESS","USER_UPDATE_REQUEST","register","name","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","login","logout","removeItem","getUserDetails","id","getState","userLogin","userInfo","Authorization","token","get","listUsers","deleteUser","delete","requestAuthorship","USER_AUTHOR_REQUEST","put","USER_AUTHOR_SUCCESS","USER_AUTHOR_FAIL","updateUser","isAdmin","isAuthor","updateProfile","authorRequest","saveShippingAddress","address","city","state","postalCode","country","savePaymentMethod"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  LOGIN_USER_FAIL,\r\n  LOGIN_USER_REQUEST,\r\n  LOGIN_USER_SUCCESS,\r\n  LOGOUT_USER_FAIL,\r\n  LOGOUT_USER_SUCCESS,\r\n  REGISTER_USER_FAIL,\r\n  REGISTER_USER_REQUEST,\r\n  REGISTER_USER_SUCCESS,\r\n  UPDATE_PROFILE_FAIL,\r\n  UPDATE_PROFILE_REQUEST,\r\n  UPDATE_PROFILE_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_PAYMENT_METHOD_SAVE,\r\n  USER_SHIPPING_SAVE_FAIL,\r\n  USER_SHIPPING_SAVE_REQUEST,\r\n  USER_SHIPPING_SAVE_SUCCESS,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_REQUEST,\r\n  USER_DELETE_FAIL,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_REQUEST,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_REQUEST,\r\n} from \"../constants/userConstants\";\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: REGISTER_USER_REQUEST });\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      \"/api/users\",\r\n      { name, email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({ type: REGISTER_USER_SUCCESS, payload: data });\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: REGISTER_USER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: LOGIN_USER_REQUEST });\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      \"/api/users/login\",\r\n      { email, password },\r\n      config\r\n    );\r\n    dispatch({ type: LOGIN_USER_SUCCESS, payload: data });\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: LOGIN_USER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  try {\r\n    localStorage.removeItem(\"userInfo\");\r\n    dispatch({ type: LOGOUT_USER_SUCCESS });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: LOGOUT_USER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_DETAILS_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users/${id}`, config);\r\n\r\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_LIST_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users`, config);\r\n\r\n    dispatch({ type: USER_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_DELETE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.delete(`/api/users/${id}`, config);\r\n\r\n    dispatch({ type: USER_DELETE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const requestAuthorship = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_AUTHOR_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/users/${id}/author`, {}, config);\r\n\r\n    dispatch({ type: USER_AUTHOR_SUCCESS });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_AUTHOR_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUser =\r\n  (id, name, email, isAdmin, isAuthor) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: USER_UPDATE_REQUEST });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.put(\r\n        `/api/users/${id}`,\r\n        { name, email, isAdmin, isAuthor },\r\n        config\r\n      );\r\n\r\n      dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_UPDATE_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const updateProfile =\r\n  (name, email, password, authorRequest = false) =>\r\n  async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: UPDATE_PROFILE_REQUEST });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.put(\r\n        `/api/users/profile`,\r\n        { name, email, password, authorRequest },\r\n        config\r\n      );\r\n\r\n      dispatch({ type: UPDATE_PROFILE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: UPDATE_PROFILE_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const saveShippingAddress =\r\n  (address, city, state, postalCode, country) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: USER_SHIPPING_SAVE_REQUEST });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.put(\r\n        \"/api/users/shipping\",\r\n        { address, city, state, postalCode, country },\r\n        config\r\n      );\r\n\r\n      dispatch({ type: USER_SHIPPING_SAVE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_SHIPPING_SAVE_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const savePaymentMethod = (data) => async (dispatch) => {\r\n  dispatch({ type: USER_PAYMENT_METHOD_SAVE, payload: data });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}