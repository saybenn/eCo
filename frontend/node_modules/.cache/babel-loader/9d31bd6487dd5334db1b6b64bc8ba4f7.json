{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elijr\\\\Desktop\\\\CODING\\\\Personal Projects\\\\Portfolio\\\\eco\\\\frontend\\\\src\\\\screens\\\\ProductEditScreen.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport { Form, Button, Container } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport FormContainer from \"../components/FormContainer\";\nimport { getProductDetails, updateProduct } from \"../actions/productActions\";\nimport { PRODUCT_LIST_RESET, PRODUCT_UPDATE_RESET } from \"../constants/productConstants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProductEditScreen = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [image, setImage] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n  const [options, setOptions] = useState(\"\");\n  const [optionName, setOptionName] = useState(\"\");\n  const [category, setCategory] = useState(0);\n  const [countInStock, setCountInStock] = useState(0);\n  const [uploading, setUploading] = useState(false);\n  const dispatch = useDispatch();\n  const productDetails = useSelector(state => state.productDetails);\n  const {\n    loading,\n    error,\n    product\n  } = productDetails;\n  const productUpdate = useSelector(state => state.productUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = productUpdate;\n  useEffect(() => {\n    if (!product.name || product._id !== id) {\n      dispatch(getProductDetails(id));\n    } else {\n      setName(product.name);\n      setPrice(product.price);\n      setImage(product.image);\n      setBrand(product.brand);\n      setCategory(product.category);\n      setCountInStock(product.countInStock);\n      setDescription(product.description);\n    }\n\n    if (successUpdate) {\n      dispatch({\n        type: PRODUCT_UPDATE_RESET\n      });\n    }\n  }, [dispatch, successUpdate, id, product, navigate]);\n\n  const uploadFileHandler = async e => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append(\"image\", file);\n    setUploading(true);\n\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      };\n      const {\n        data\n      } = await axios.post(\"/api/upload\", formData, config);\n      setImage(data);\n      setUploading(false);\n    } catch (error) {\n      console.error(error);\n      setUploading(false);\n    }\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updateProduct(id, name, price, image, brand, category, description, countInStock, options, optionName));\n    dispatch({\n      type: PRODUCT_LIST_RESET\n    });\n    navigate(\"/admin/productlist\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/admin/productlist\",\n        className: \"btn btn-light my-3\",\n        children: \"Go Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Edit Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this) : loadingUpdate ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this) : errorUpdate ? /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"danger\",\n          children: errorUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: submitHandler,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"name\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"name\",\n              value: name,\n              placeholder: \"Enter name\",\n              onChange: e => setName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"price\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              value: price,\n              placeholder: \"Enter price\",\n              onChange: e => setPrice(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"image\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: image,\n              placeholder: \"Enter image url\",\n              onChange: e => setImage(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              id: \"image-file\",\n              label: \"Choose File\",\n              type: \"file\",\n              onChange: uploadFileHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this), uploading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"brand\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Brand\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: brand,\n              placeholder: \"Enter brand \",\n              onChange: e => setBrand(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"countInStock\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Count In Stock\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              value: countInStock,\n              placeholder: \"Enter Count In Stock \",\n              onChange: e => setCountInStock(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"category\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: category,\n              placeholder: \"Enter category \",\n              onChange: e => setCategory(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: options,\n              placeholder: \"Enter options\",\n              onChange: e => setOptions(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: optionName,\n              placeholder: \"Enter option Name \",\n              onChange: e => setOptionName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"description\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: description,\n              placeholder: \"Enter description \",\n              onChange: e => setDescription(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"primary\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ProductEditScreen, \"MV27t3l/gpuoBQMxP1Ztf5egevk=\", false, function () {\n  return [useParams, useNavigate, useDispatch, useSelector, useSelector];\n});\n\n_c = ProductEditScreen;\nexport default ProductEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductEditScreen\");","map":{"version":3,"sources":["C:/Users/elijr/Desktop/CODING/Personal Projects/Portfolio/eco/frontend/src/screens/ProductEditScreen.js"],"names":["axios","React","useState","useEffect","Link","useNavigate","useParams","Form","Button","Container","useDispatch","useSelector","Header","Footer","Message","Loader","FormContainer","getProductDetails","updateProduct","PRODUCT_LIST_RESET","PRODUCT_UPDATE_RESET","ProductEditScreen","id","navigate","name","setName","description","setDescription","price","setPrice","image","setImage","brand","setBrand","options","setOptions","optionName","setOptionName","category","setCategory","countInStock","setCountInStock","uploading","setUploading","dispatch","productDetails","state","loading","error","product","productUpdate","loadingUpdate","errorUpdate","success","successUpdate","_id","type","uploadFileHandler","e","file","target","files","formData","FormData","append","config","headers","data","post","console","submitHandler","preventDefault","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,WAAf,EAA4BC,SAA5B,QAA6C,kBAA7C;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,SAAvB,QAAwC,iBAAxC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SAASC,iBAAT,EAA4BC,aAA5B,QAAiD,2BAAjD;AACA,SACEC,kBADF,EAEEC,oBAFF,QAGO,+BAHP;;;;AAKA,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AAC9B,QAAM;AAAEC,IAAAA;AAAF,MAAShB,SAAS,EAAxB;AACA,QAAMiB,QAAQ,GAAGlB,WAAW,EAA5B;AACA,QAAM,CAACmB,IAAD,EAAOC,OAAP,IAAkBvB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACwB,WAAD,EAAcC,cAAd,IAAgCzB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAAC0B,KAAD,EAAQC,QAAR,IAAoB3B,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAAC4B,KAAD,EAAQC,QAAR,IAAoB7B,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAC8B,KAAD,EAAQC,QAAR,IAAoB/B,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACgC,OAAD,EAAUC,UAAV,IAAwBjC,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACkC,UAAD,EAAaC,aAAb,IAA8BnC,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACoC,QAAD,EAAWC,WAAX,IAA0BrC,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACsC,YAAD,EAAeC,eAAf,IAAkCvC,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM,CAACwC,SAAD,EAAYC,YAAZ,IAA4BzC,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAM0C,QAAQ,GAAGlC,WAAW,EAA5B;AAEA,QAAMmC,cAAc,GAAGlC,WAAW,CAAEmC,KAAD,IAAWA,KAAK,CAACD,cAAlB,CAAlC;AACA,QAAM;AAAEE,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA8BJ,cAApC;AAEA,QAAMK,aAAa,GAAGvC,WAAW,CAAEmC,KAAD,IAAWA,KAAK,CAACI,aAAlB,CAAjC;AACA,QAAM;AACJH,IAAAA,OAAO,EAAEI,aADL;AAEJH,IAAAA,KAAK,EAAEI,WAFH;AAGJC,IAAAA,OAAO,EAAEC;AAHL,MAIFJ,aAJJ;AAMA/C,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAAC8C,OAAO,CAACzB,IAAT,IAAiByB,OAAO,CAACM,GAAR,KAAgBjC,EAArC,EAAyC;AACvCsB,MAAAA,QAAQ,CAAC3B,iBAAiB,CAACK,EAAD,CAAlB,CAAR;AACD,KAFD,MAEO;AACLG,MAAAA,OAAO,CAACwB,OAAO,CAACzB,IAAT,CAAP;AACAK,MAAAA,QAAQ,CAACoB,OAAO,CAACrB,KAAT,CAAR;AACAG,MAAAA,QAAQ,CAACkB,OAAO,CAACnB,KAAT,CAAR;AACAG,MAAAA,QAAQ,CAACgB,OAAO,CAACjB,KAAT,CAAR;AACAO,MAAAA,WAAW,CAACU,OAAO,CAACX,QAAT,CAAX;AACAG,MAAAA,eAAe,CAACQ,OAAO,CAACT,YAAT,CAAf;AACAb,MAAAA,cAAc,CAACsB,OAAO,CAACvB,WAAT,CAAd;AACD;;AAED,QAAI4B,aAAJ,EAAmB;AACjBV,MAAAA,QAAQ,CAAC;AAAEY,QAAAA,IAAI,EAAEpC;AAAR,OAAD,CAAR;AACD;AACF,GAhBQ,EAgBN,CAACwB,QAAD,EAAWU,aAAX,EAA0BhC,EAA1B,EAA8B2B,OAA9B,EAAuC1B,QAAvC,CAhBM,CAAT;;AAkBA,QAAMkC,iBAAiB,GAAG,MAAOC,CAAP,IAAa;AACrC,UAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb;AACA,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBL,IAAzB;AACAhB,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AAEA,QAAI;AACF,YAAMsB,MAAM,GAAG;AACbC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AADI,OAAf;AAKA,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMnE,KAAK,CAACoE,IAAN,CAAW,aAAX,EAA0BN,QAA1B,EAAoCG,MAApC,CAAvB;AAEAlC,MAAAA,QAAQ,CAACoC,IAAD,CAAR;AACAxB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAVD,CAUE,OAAOK,KAAP,EAAc;AACdqB,MAAAA,OAAO,CAACrB,KAAR,CAAcA,KAAd;AACAL,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF,GApBD;;AAsBA,QAAM2B,aAAa,GAAIZ,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACa,cAAF;AACA3B,IAAAA,QAAQ,CACN1B,aAAa,CACXI,EADW,EAEXE,IAFW,EAGXI,KAHW,EAIXE,KAJW,EAKXE,KALW,EAMXM,QANW,EAOXZ,WAPW,EAQXc,YARW,EASXN,OATW,EAUXE,UAVW,CADP,CAAR;AAcAQ,IAAAA,QAAQ,CAAC;AAAEY,MAAAA,IAAI,EAAErC;AAAR,KAAD,CAAR;AACAI,IAAAA,QAAQ,CAAC,oBAAD,CAAR;AACD,GAlBD;;AAoBA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAA,iBACG,GADH,eAEE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,oBAAT;AAA8B,QAAA,SAAS,EAAC,oBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE,QAAC,aAAD;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGwB,OAAO,gBACN,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBADM,GAEJC,KAAK,gBACP,QAAC,OAAD;AAAS,UAAA,OAAO,EAAC,QAAjB;AAAA,oBAA2BA;AAA3B;AAAA;AAAA;AAAA;AAAA,gBADO,GAELG,aAAa,gBACf,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBADe,GAEbC,WAAW,gBACb,QAAC,OAAD;AAAS,UAAA,OAAO,EAAC,QAAjB;AAAA,oBAA2BA;AAA3B;AAAA;AAAA;AAAA;AAAA,gBADa,gBAGb,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAEkB,aAAhB;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,MAAtB;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,KAAK,EAAE9C,IAFT;AAGE,cAAA,WAAW,EAAC,YAHd;AAIE,cAAA,QAAQ,EAAGkC,CAAD,IAAOjC,OAAO,CAACiC,CAAC,CAACE,MAAF,CAASY,KAAV;AAJ1B;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAWE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,OAAtB;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,cAAA,IAAI,EAAC,QADP;AAEE,cAAA,KAAK,EAAE5C,KAFT;AAGE,cAAA,WAAW,EAAC,aAHd;AAIE,cAAA,QAAQ,EAAG8B,CAAD,IAAO7B,QAAQ,CAAC6B,CAAC,CAACE,MAAF,CAASY,KAAV;AAJ3B;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXF,eAqBE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,OAAtB;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,KAAK,EAAE1C,KAFT;AAGE,cAAA,WAAW,EAAC,iBAHd;AAIE,cAAA,QAAQ,EAAG4B,CAAD,IAAO3B,QAAQ,CAAC2B,CAAC,CAACE,MAAF,CAASY,KAAV;AAJ3B;AAAA;AAAA;AAAA;AAAA,oBAFF,eAQE,QAAC,IAAD,CAAM,OAAN;AACE,cAAA,EAAE,EAAC,YADL;AAEE,cAAA,KAAK,EAAC,aAFR;AAGE,cAAA,IAAI,EAAC,MAHP;AAIE,cAAA,QAAQ,EAAEf;AAJZ;AAAA;AAAA;AAAA;AAAA,oBARF,EAcGf,SAAS,iBAAI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,oBAdhB;AAAA;AAAA;AAAA;AAAA;AAAA,kBArBF,eAqCE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,OAAtB;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,KAAK,EAAEV,KAFT;AAGE,cAAA,WAAW,EAAC,cAHd;AAIE,cAAA,QAAQ,EAAG0B,CAAD,IAAOzB,QAAQ,CAACyB,CAAC,CAACE,MAAF,CAASY,KAAV;AAJ3B;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBArCF,eA8CE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,cAAtB;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,cAAA,IAAI,EAAC,QADP;AAEE,cAAA,KAAK,EAAEhC,YAFT;AAGE,cAAA,WAAW,EAAC,uBAHd;AAIE,cAAA,QAAQ,EAAGkB,CAAD,IAAOjB,eAAe,CAACiB,CAAC,CAACE,MAAF,CAASY,KAAV;AAJlC;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBA9CF,eAuDE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,UAAtB;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,KAAK,EAAElC,QAFT;AAGE,cAAA,WAAW,EAAC,iBAHd;AAIE,cAAA,QAAQ,EAAGoB,CAAD,IAAOnB,WAAW,CAACmB,CAAC,CAACE,MAAF,CAASY,KAAV;AAJ9B;AAAA;AAAA;AAAA;AAAA,oBAFF,eAQE,QAAC,IAAD,CAAM,OAAN;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,KAAK,EAAEtC,OAFT;AAGE,cAAA,WAAW,EAAC,eAHd;AAIE,cAAA,QAAQ,EAAGwB,CAAD,IAAOvB,UAAU,CAACuB,CAAC,CAACE,MAAF,CAASY,KAAV;AAJ7B;AAAA;AAAA;AAAA;AAAA,oBARF,eAcE,QAAC,IAAD,CAAM,OAAN;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,KAAK,EAAEpC,UAFT;AAGE,cAAA,WAAW,EAAC,oBAHd;AAIE,cAAA,QAAQ,EAAGsB,CAAD,IAAOrB,aAAa,CAACqB,CAAC,CAACE,MAAF,CAASY,KAAV;AAJhC;AAAA;AAAA;AAAA;AAAA,oBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAvDF,eA4EE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,aAAtB;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,KAAK,EAAE9C,WAFT;AAGE,cAAA,WAAW,EAAC,oBAHd;AAIE,cAAA,QAAQ,EAAGgC,CAAD,IAAO/B,cAAc,CAAC+B,CAAC,CAACE,MAAF,CAASY,KAAV;AAJjC;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBA5EF,eAsFE,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,OAAO,EAAC,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAtFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eA+GE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YA/GF;AAAA,kBADF;AAmHD,CAzMD;;GAAMnD,iB;UACWf,S,EACED,W,EAYAK,W,EAEMC,W,EAGDA,W;;;KAnBlBU,iB;AA0MN,eAAeA,iBAAf","sourcesContent":["import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\nimport { Form, Button, Container } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Header from \"../components/Header\";\r\nimport Footer from \"../components/Footer\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { getProductDetails, updateProduct } from \"../actions/productActions\";\r\nimport {\r\n  PRODUCT_LIST_RESET,\r\n  PRODUCT_UPDATE_RESET,\r\n} from \"../constants/productConstants\";\r\n\r\nconst ProductEditScreen = () => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [price, setPrice] = useState(0);\r\n  const [image, setImage] = useState(\"\");\r\n  const [brand, setBrand] = useState(\"\");\r\n  const [options, setOptions] = useState(\"\");\r\n  const [optionName, setOptionName] = useState(\"\");\r\n  const [category, setCategory] = useState(0);\r\n  const [countInStock, setCountInStock] = useState(0);\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = productUpdate;\r\n\r\n  useEffect(() => {\r\n    if (!product.name || product._id !== id) {\r\n      dispatch(getProductDetails(id));\r\n    } else {\r\n      setName(product.name);\r\n      setPrice(product.price);\r\n      setImage(product.image);\r\n      setBrand(product.brand);\r\n      setCategory(product.category);\r\n      setCountInStock(product.countInStock);\r\n      setDescription(product.description);\r\n    }\r\n\r\n    if (successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET });\r\n    }\r\n  }, [dispatch, successUpdate, id, product, navigate]);\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append(\"image\", file);\r\n    setUploading(true);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      };\r\n      const { data } = await axios.post(\"/api/upload\", formData, config);\r\n\r\n      setImage(data);\r\n      setUploading(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      updateProduct(\r\n        id,\r\n        name,\r\n        price,\r\n        image,\r\n        brand,\r\n        category,\r\n        description,\r\n        countInStock,\r\n        options,\r\n        optionName\r\n      )\r\n    );\r\n    dispatch({ type: PRODUCT_LIST_RESET });\r\n    navigate(\"/admin/productlist\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Container>\r\n        {\" \"}\r\n        <Link to=\"/admin/productlist\" className=\"btn btn-light my-3\">\r\n          Go Back\r\n        </Link>\r\n        <FormContainer>\r\n          <h1>Edit Product</h1>\r\n          {loading ? (\r\n            <Loader />\r\n          ) : error ? (\r\n            <Message variant=\"danger\">{error}</Message>\r\n          ) : loadingUpdate ? (\r\n            <Loader />\r\n          ) : errorUpdate ? (\r\n            <Message variant=\"danger\">{errorUpdate}</Message>\r\n          ) : (\r\n            <Form onSubmit={submitHandler}>\r\n              <Form.Group controlId=\"name\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"name\"\r\n                  value={name}\r\n                  placeholder=\"Enter name\"\r\n                  onChange={(e) => setName(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"price\">\r\n                <Form.Label>Price</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  value={price}\r\n                  placeholder=\"Enter price\"\r\n                  onChange={(e) => setPrice(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"image\">\r\n                <Form.Label>Image</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={image}\r\n                  placeholder=\"Enter image url\"\r\n                  onChange={(e) => setImage(e.target.value)}\r\n                ></Form.Control>\r\n                <Form.Control\r\n                  id=\"image-file\"\r\n                  label=\"Choose File\"\r\n                  type=\"file\"\r\n                  onChange={uploadFileHandler}\r\n                ></Form.Control>\r\n                {uploading && <Loader />}\r\n              </Form.Group>\r\n              <Form.Group controlId=\"brand\">\r\n                <Form.Label>Brand</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={brand}\r\n                  placeholder=\"Enter brand \"\r\n                  onChange={(e) => setBrand(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"countInStock\">\r\n                <Form.Label>Count In Stock</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  value={countInStock}\r\n                  placeholder=\"Enter Count In Stock \"\r\n                  onChange={(e) => setCountInStock(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"category\">\r\n                <Form.Label>Category</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={category}\r\n                  placeholder=\"Enter category \"\r\n                  onChange={(e) => setCategory(e.target.value)}\r\n                ></Form.Control>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={options}\r\n                  placeholder=\"Enter options\"\r\n                  onChange={(e) => setOptions(e.target.value)}\r\n                ></Form.Control>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={optionName}\r\n                  placeholder=\"Enter option Name \"\r\n                  onChange={(e) => setOptionName(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"description\">\r\n                <Form.Label>Description</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={description}\r\n                  placeholder=\"Enter description \"\r\n                  onChange={(e) => setDescription(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Button type=\"submit\" variant=\"primary\">\r\n                Update\r\n              </Button>\r\n            </Form>\r\n          )}\r\n        </FormContainer>\r\n      </Container>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\nexport default ProductEditScreen;\r\n"]},"metadata":{},"sourceType":"module"}