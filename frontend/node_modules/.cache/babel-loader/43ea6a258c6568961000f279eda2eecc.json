{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elijr\\\\Desktop\\\\CODING\\\\Personal Projects\\\\Portfolio\\\\eco\\\\frontend\\\\src\\\\screens\\\\BlogScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Row, Col, Modal, Button, Form, Image, Toast, Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport Container from \"../components/Container\";\nimport BlogScreenBlogPosts from \"../components/BlogScreenBlogPosts\";\nimport FormContainer from \"../components/FormContainer\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { listBlogs, createBlogPost } from \"../actions/blogActions\";\nimport Tippy from \"@tippy.js/react\";\nimport { requestAuthorship } from \"../actions/userActions\";\nimport { BLOG_LIKE_RESET } from \"../constants/blogConstants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst BlogScreen = () => {\n  _s();\n\n  const [message, setMessage] = useState(\"false\");\n  const [toastShow, setToastShow] = useState(false);\n  const [postShow, setPostShow] = useState(false);\n  const [postBody, setPostBody] = useState(\"\");\n  const [postTitle, setPostTitle] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n  const [image, setImage] = useState(\"\");\n\n  const handlePostClose = () => setPostShow(false);\n\n  const handlePostShow = () => setPostShow(true);\n\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const userAuthor = useSelector(state => state.userAuthor);\n  const {\n    success: authorSuccess\n  } = userAuthor;\n  const blogList = useSelector(state => state.blogList);\n  const {\n    loading,\n    error,\n    blogs\n  } = blogList;\n  const createBlog = useSelector(state => state.createBlog);\n  const {\n    success\n  } = createBlog;\n  const blogDeletePost = useSelector(state => state.blogDeletePost);\n  const {\n    success: deleteSuccess\n  } = blogDeletePost;\n  const blogLike = useSelector(state => state.blogLike);\n  const {\n    success: likeSuccess\n  } = blogLike;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(listBlogs());\n\n    if (authorSuccess) {\n      setMessage(`Your request for the author role has been received.`);\n      setTimeout(() => {\n        setMessage(false);\n      }, 5000);\n    }\n\n    if (likeSuccess) {\n      dispatch({\n        type: BLOG_LIKE_RESET\n      });\n    }\n  }, [dispatch, success, deleteSuccess, likeSuccess, authorSuccess]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (!userInfo.isAuthor) {\n      setToastShow(true);\n      setMessage(`Must be an author to make a post.`);\n      setTimeout(() => {\n        setMessage(false);\n      }, 5000);\n    } else {\n      dispatch(createBlogPost(postTitle, postBody, image));\n      setPostBody(\"\");\n      setPostTitle(\"\");\n    }\n  };\n\n  const authorHandler = () => {\n    dispatch(requestAuthorship(userInfo._id));\n  };\n\n  const uploadFileHandler = async e => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append(\"image\", file);\n    setUploading(true);\n\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      };\n      const {\n        data\n      } = await axios.post(\"/api/upload\", formData, config);\n      setImage(data);\n      setUploading(false);\n    } catch (error) {\n      console.error(error);\n      setUploading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"d-flex justify-content-between\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 9,\n          className: \"d-flex align-items-end\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Community Writing Blog\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), \" \", authorSuccess && /*#__PURE__*/_jsxDEV(Message, {\n            variant: \"info\",\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          className: \"d-flex justify-content-end align-items-end\",\n          children: [userInfo.isAuthor && /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"\",\n            onClick: handlePostShow,\n            children: [\"Create a Post \", /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-4x fa-edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), !userInfo.isAuthor && !userInfo.authorRequest && /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"\",\n            onClick: authorHandler,\n            children: [\"Request Author Role \", /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-4x fa-edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Tippy, {\n              content: \"The Author role allows users to contribute their own blog post to the community. Requests must be approved by an Administrator.\",\n              placement: \"top\",\n              arrow: false,\n              delay: 300,\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-info-circle mx-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        style: {\n          color: \"black\",\n          backgroundColor: \"black\",\n          height: 5\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: postShow,\n        onHide: handlePostClose,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Create A Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(FormContainer, {\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: submitHandler,\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Post Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"title\",\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  value: postTitle,\n                  onChange: e => setPostTitle(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Post Body\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"body\",\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  value: postBody,\n                  onChange: e => setPostBody(e.target.value),\n                  as: \"textarea\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"image\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  value: image,\n                  placeholder: \"Enter image url\",\n                  onChange: e => setImage(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  id: \"image-file\",\n                  label: \"Choose File\",\n                  type: \"file\",\n                  onChange: uploadFileHandler\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 19\n                }, this), uploading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"dark-btn\",\n                type: \"submit\",\n                onClick: handlePostClose,\n                children: \"Submit Blog Post\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Toast, {\n        onClose: () => setToastShow(false),\n        show: toastShow,\n        delay: 5000,\n        autohide: true,\n        children: /*#__PURE__*/_jsxDEV(Toast.Header, {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-3\",\n          children: blogs && blogs.sort((a, b) => Date.parse(b.createdAt) - Date.parse(a.createdAt)).map(blog => {\n            return /*#__PURE__*/_jsxDEV(Col, {\n              sm: 12,\n              md: 6,\n              lg: 4,\n              xl: 4,\n              children: /*#__PURE__*/_jsxDEV(BlogScreenBlogPosts, {\n                blog: blog\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 23\n              }, this)\n            }, blog._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(BlogScreen, \"TYekN+IRLeca9QQZ2Jzv0AmssNc=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = BlogScreen;\nexport default BlogScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlogScreen\");","map":{"version":3,"sources":["C:/Users/elijr/Desktop/CODING/Personal Projects/Portfolio/eco/frontend/src/screens/BlogScreen.js"],"names":["React","useState","useEffect","axios","useDispatch","useSelector","Row","Col","Modal","Button","Form","Image","Toast","Card","Link","Container","BlogScreenBlogPosts","FormContainer","Loader","Message","listBlogs","createBlogPost","Tippy","requestAuthorship","BLOG_LIKE_RESET","BlogScreen","message","setMessage","toastShow","setToastShow","postShow","setPostShow","postBody","setPostBody","postTitle","setPostTitle","uploading","setUploading","image","setImage","handlePostClose","handlePostShow","userLogin","state","userInfo","userAuthor","success","authorSuccess","blogList","loading","error","blogs","createBlog","blogDeletePost","deleteSuccess","blogLike","likeSuccess","dispatch","setTimeout","type","submitHandler","e","preventDefault","isAuthor","authorHandler","_id","uploadFileHandler","file","target","files","formData","FormData","append","config","headers","data","post","console","authorRequest","color","backgroundColor","height","value","sort","a","b","Date","parse","createdAt","map","blog"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  Button,\r\n  Form,\r\n  Image,\r\n  Toast,\r\n  Card,\r\n} from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Container from \"../components/Container\";\r\nimport BlogScreenBlogPosts from \"../components/BlogScreenBlogPosts\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { listBlogs, createBlogPost } from \"../actions/blogActions\";\r\nimport Tippy from \"@tippy.js/react\";\r\nimport { requestAuthorship } from \"../actions/userActions\";\r\nimport { BLOG_LIKE_RESET } from \"../constants/blogConstants\";\r\n\r\nconst BlogScreen = () => {\r\n  const [message, setMessage] = useState(\"false\");\r\n  const [toastShow, setToastShow] = useState(false);\r\n  const [postShow, setPostShow] = useState(false);\r\n  const [postBody, setPostBody] = useState(\"\");\r\n  const [postTitle, setPostTitle] = useState(\"\");\r\n  const [uploading, setUploading] = useState(false);\r\n  const [image, setImage] = useState(\"\");\r\n\r\n  const handlePostClose = () => setPostShow(false);\r\n  const handlePostShow = () => setPostShow(true);\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userAuthor = useSelector((state) => state.userAuthor);\r\n  const { success: authorSuccess } = userAuthor;\r\n\r\n  const blogList = useSelector((state) => state.blogList);\r\n  const { loading, error, blogs } = blogList;\r\n\r\n  const createBlog = useSelector((state) => state.createBlog);\r\n  const { success } = createBlog;\r\n\r\n  const blogDeletePost = useSelector((state) => state.blogDeletePost);\r\n  const { success: deleteSuccess } = blogDeletePost;\r\n\r\n  const blogLike = useSelector((state) => state.blogLike);\r\n  const { success: likeSuccess } = blogLike;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(listBlogs());\r\n\r\n    if (authorSuccess) {\r\n      setMessage(`Your request for the author role has been received.`);\r\n      setTimeout(() => {\r\n        setMessage(false);\r\n      }, 5000);\r\n    }\r\n\r\n    if (likeSuccess) {\r\n      dispatch({ type: BLOG_LIKE_RESET });\r\n    }\r\n  }, [dispatch, success, deleteSuccess, likeSuccess, authorSuccess]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (!userInfo.isAuthor) {\r\n      setToastShow(true);\r\n      setMessage(`Must be an author to make a post.`);\r\n      setTimeout(() => {\r\n        setMessage(false);\r\n      }, 5000);\r\n    } else {\r\n      dispatch(createBlogPost(postTitle, postBody, image));\r\n      setPostBody(\"\");\r\n      setPostTitle(\"\");\r\n    }\r\n  };\r\n\r\n  const authorHandler = () => {\r\n    dispatch(requestAuthorship(userInfo._id));\r\n  };\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append(\"image\", file);\r\n    setUploading(true);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      };\r\n      const { data } = await axios.post(\"/api/upload\", formData, config);\r\n\r\n      setImage(data);\r\n      setUploading(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setUploading(false);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Row className=\"d-flex justify-content-between\">\r\n          <Col md={9} className=\"d-flex align-items-end\">\r\n            <h1>Community Writing Blog</h1>{\" \"}\r\n            {authorSuccess && <Message variant=\"info\">{message}</Message>}\r\n          </Col>\r\n          <Col md={3} className=\"d-flex justify-content-end align-items-end\">\r\n            {userInfo.isAuthor && (\r\n              <Button variant=\"\" onClick={handlePostShow}>\r\n                Create a Post <i className=\"fas fa-4x fa-edit\"></i>\r\n              </Button>\r\n            )}\r\n            {!userInfo.isAuthor && !userInfo.authorRequest && (\r\n              <Button variant=\"\" onClick={authorHandler}>\r\n                Request Author Role <i className=\"fas fa-4x fa-edit\"></i>\r\n                <Tippy\r\n                  content=\"The Author role allows users to contribute their own blog post to the community. Requests must be approved by an Administrator.\"\r\n                  placement=\"top\"\r\n                  arrow={false}\r\n                  delay={300}\r\n                >\r\n                  <i className=\"fas fa-info-circle mx-1\"></i>\r\n                </Tippy>\r\n              </Button>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n        <hr\r\n          style={{\r\n            color: \"black\",\r\n            backgroundColor: \"black\",\r\n            height: 5,\r\n          }}\r\n        />\r\n        <Modal show={postShow} onHide={handlePostClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Create A Post</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <FormContainer>\r\n              <Form onSubmit={submitHandler}>\r\n                <Form.Label>Post Title</Form.Label>\r\n                <Form.Group controlId=\"title\">\r\n                  <Form.Control\r\n                    value={postTitle}\r\n                    onChange={(e) => setPostTitle(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Label>Post Body</Form.Label>\r\n                <Form.Group controlId=\"body\">\r\n                  <Form.Control\r\n                    value={postBody}\r\n                    onChange={(e) => setPostBody(e.target.value)}\r\n                    as=\"textarea\"\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"image\">\r\n                  <Form.Label>Image</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    value={image}\r\n                    placeholder=\"Enter image url\"\r\n                    onChange={(e) => setImage(e.target.value)}\r\n                  ></Form.Control>\r\n                  <Form.Control\r\n                    id=\"image-file\"\r\n                    label=\"Choose File\"\r\n                    type=\"file\"\r\n                    onChange={uploadFileHandler}\r\n                  ></Form.Control>\r\n                  {uploading && <Loader />}\r\n                </Form.Group>\r\n                <Button\r\n                  variant=\"dark-btn\"\r\n                  type=\"submit\"\r\n                  onClick={handlePostClose}\r\n                >\r\n                  Submit Blog Post\r\n                </Button>\r\n              </Form>\r\n            </FormContainer>\r\n          </Modal.Body>\r\n        </Modal>\r\n        {loading && <Loader />}\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        <Toast\r\n          onClose={() => setToastShow(false)}\r\n          show={toastShow}\r\n          delay={5000}\r\n          autohide\r\n        >\r\n          <Toast.Header>{message}</Toast.Header>\r\n        </Toast>{\" \"}\r\n        <Card>\r\n          <Row className=\"mb-3\">\r\n            {blogs &&\r\n              blogs\r\n                .sort(\r\n                  (a, b) => Date.parse(b.createdAt) - Date.parse(a.createdAt)\r\n                )\r\n                .map((blog) => {\r\n                  return (\r\n                    <Col key={blog._id} sm={12} md={6} lg={4} xl={4}>\r\n                      <BlogScreenBlogPosts blog={blog} />\r\n                    </Col>\r\n                  );\r\n                })}\r\n          </Row>\r\n        </Card>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BlogScreen;\r\n"]},"metadata":{},"sourceType":"module"}