{"ast":null,"code":"import { BLOG_COMMENT_FAIL, BLOG_COMMENT_REQUEST, BLOG_COMMENT_SUCCESS, BLOG_LIKE_FAIL, BLOG_LIKE_REQUEST, BLOG_LIKE_SUCCESS, BLOG_LIST_FAIL, BLOG_LIST_REQUEST, BLOG_LIST_SUCCESS, TOP_BLOG_FAIL, TOP_BLOG_REQUEST, TOP_BLOG_SUCCESS, GET_MY_BLOGS_FAIL, GET_MY_BLOGS_REQUEST, GET_MY_BLOGS_SUCCESS } from \"../constants/blogConstants\";\nexport const blogListReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    blogs: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case BLOG_LIST_REQUEST:\n      return {\n        loading: true,\n        blogs: []\n      };\n\n    case BLOG_LIST_SUCCESS:\n      return {\n        loading: false,\n        blogs: action.payload\n      };\n\n    case BLOG_LIST_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\nexport const blogLikeReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case BLOG_LIKE_REQUEST:\n      return {\n        loading: true\n      };\n\n    case BLOG_LIKE_SUCCESS:\n      return {\n        loading: false,\n        success: true\n      };\n\n    case BLOG_LIKE_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\nexport const blogCommentReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case BLOG_COMMENT_REQUEST:\n      return {\n        loading: true\n      };\n\n    case BLOG_COMMENT_SUCCESS:\n      return {\n        loading: false,\n        success: true\n      };\n\n    case BLOG_COMMENT_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\nexport const topBlogReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    blogs: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case TOP_BLOG_REQUEST:\n      return {\n        loading: true\n      };\n\n    case TOP_BLOG_SUCCESS:\n      return {\n        loading: false,\n        blogs: action.payload\n      };\n\n    case TOP_BLOG_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\nexport const myBlogReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    blogs: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_MY_BLOGS_REQUEST:\n      return {\n        loading: true\n      };\n\n    case GET_MY_BLOGS_SUCCESS:\n      return {\n        loading: false,\n        blogs: action.payload\n      };\n\n    case GET_MY_BLOGS_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/elijr/Desktop/CODING/Personal Projects/Portfolio/eco/frontend/src/reducers/blogReducers.js"],"names":["BLOG_COMMENT_FAIL","BLOG_COMMENT_REQUEST","BLOG_COMMENT_SUCCESS","BLOG_LIKE_FAIL","BLOG_LIKE_REQUEST","BLOG_LIKE_SUCCESS","BLOG_LIST_FAIL","BLOG_LIST_REQUEST","BLOG_LIST_SUCCESS","TOP_BLOG_FAIL","TOP_BLOG_REQUEST","TOP_BLOG_SUCCESS","GET_MY_BLOGS_FAIL","GET_MY_BLOGS_REQUEST","GET_MY_BLOGS_SUCCESS","blogListReducer","state","blogs","action","type","loading","payload","error","blogLikeReducer","success","blogCommentReducer","topBlogReducer","myBlogReducer"],"mappings":"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","sourcesContent":["import {\r\n  BLOG_COMMENT_FAIL,\r\n  BLOG_COMMENT_REQUEST,\r\n  BLOG_COMMENT_SUCCESS,\r\n  BLOG_LIKE_FAIL,\r\n  BLOG_LIKE_REQUEST,\r\n  BLOG_LIKE_SUCCESS,\r\n  BLOG_LIST_FAIL,\r\n  BLOG_LIST_REQUEST,\r\n  BLOG_LIST_SUCCESS,\r\n  TOP_BLOG_FAIL,\r\n  TOP_BLOG_REQUEST,\r\n  TOP_BLOG_SUCCESS,\r\n  GET_MY_BLOGS_FAIL,\r\n  GET_MY_BLOGS_REQUEST,\r\n  GET_MY_BLOGS_SUCCESS,\r\n} from \"../constants/blogConstants\";\r\n\r\nexport const blogListReducer = (state = { blogs: [] }, action) => {\r\n  switch (action.type) {\r\n    case BLOG_LIST_REQUEST:\r\n      return { loading: true, blogs: [] };\r\n    case BLOG_LIST_SUCCESS:\r\n      return { loading: false, blogs: action.payload };\r\n    case BLOG_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const blogLikeReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case BLOG_LIKE_REQUEST:\r\n      return { loading: true };\r\n    case BLOG_LIKE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case BLOG_LIKE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const blogCommentReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case BLOG_COMMENT_REQUEST:\r\n      return { loading: true };\r\n    case BLOG_COMMENT_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case BLOG_COMMENT_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const topBlogReducer = (state = { blogs: [] }, action) => {\r\n  switch (action.type) {\r\n    case TOP_BLOG_REQUEST:\r\n      return { loading: true };\r\n    case TOP_BLOG_SUCCESS:\r\n      return { loading: false, blogs: action.payload };\r\n    case TOP_BLOG_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const myBlogReducer = (state = { blogs: [] }, action) => {\r\n  switch (action.type) {\r\n    case GET_MY_BLOGS_REQUEST:\r\n      return { loading: true };\r\n    case GET_MY_BLOGS_SUCCESS:\r\n      return { loading: false, blogs: action.payload };\r\n    case GET_MY_BLOGS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}