{"ast":null,"code":"import axios from \"axios\";\nimport { ADD_ITEM_CART_FAIL, ADD_ITEM_CART_REQUEST, ADD_ITEM_CART_SUCCESS, GET_CART_FAIL, GET_CART_REQUEST, GET_CART_SUCCESS, UPDATE_CART_FAIL, UPDATE_CART_REQUEST, UPDATE_CART_SUCCESS } from \"../constants/cartConstants\";\nexport const addItemToCart = (product, qty, options) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ADD_ITEM_CART_REQUEST\n    });\n    console.log(product, qty, options);\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/cart\", {\n      product,\n      qty,\n      options\n    }, config);\n    dispatch({\n      type: ADD_ITEM_CART_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ADD_ITEM_CART_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateCart = cartItem => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: UPDATE_CART_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(\"/api/cart\", cartItem, config);\n    dispatch({\n      type: UPDATE_CART_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_CART_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getCart = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: GET_CART_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(\"/api/cart\", {}, config);\n    dispatch({\n      type: GET_CART_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_CART_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/elijr/Desktop/CODING/Personal Projects/Portfolio/eco/frontend/src/actions/cartActions.js"],"names":["axios","ADD_ITEM_CART_FAIL","ADD_ITEM_CART_REQUEST","ADD_ITEM_CART_SUCCESS","GET_CART_FAIL","GET_CART_REQUEST","GET_CART_SUCCESS","UPDATE_CART_FAIL","UPDATE_CART_REQUEST","UPDATE_CART_SUCCESS","addItemToCart","product","qty","options","dispatch","getState","type","console","log","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","error","response","message","updateCart","cartItem","put","getCart","get"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  ADD_ITEM_CART_FAIL,\r\n  ADD_ITEM_CART_REQUEST,\r\n  ADD_ITEM_CART_SUCCESS,\r\n  GET_CART_FAIL,\r\n  GET_CART_REQUEST,\r\n  GET_CART_SUCCESS,\r\n  UPDATE_CART_FAIL,\r\n  UPDATE_CART_REQUEST,\r\n  UPDATE_CART_SUCCESS,\r\n} from \"../constants/cartConstants\";\r\n\r\nexport const addItemToCart =\r\n  (product, qty, options) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: ADD_ITEM_CART_REQUEST });\r\n      console.log(product, qty, options);\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        \"/api/cart\",\r\n        { product, qty, options },\r\n        config\r\n      );\r\n\r\n      dispatch({ type: ADD_ITEM_CART_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: ADD_ITEM_CART_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const updateCart = (cartItem) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: UPDATE_CART_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\"/api/cart\", cartItem, config);\r\n\r\n    dispatch({ type: UPDATE_CART_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: UPDATE_CART_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getCart = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: GET_CART_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(\"/api/cart\", {}, config);\r\n\r\n    dispatch({ type: GET_CART_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_CART_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}