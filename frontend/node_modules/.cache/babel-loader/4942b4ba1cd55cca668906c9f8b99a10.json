{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elijr\\\\Desktop\\\\CODING\\\\Personal Projects\\\\Portfolio\\\\eco\\\\frontend\\\\src\\\\components\\\\CheckoutForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport Loader from \"./Loader\";\nimport Message from \"./Message\";\nimport { PaymentElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport { payOrder } from \"../actions/orderActions\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CheckoutForm = _ref => {\n  _s();\n\n  let {\n    clientSecret,\n    id\n  } = _ref;\n  //Hooks\n  const [message, setMessage] = useState(null);\n  const [success, setSuccess] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const dispatch = useDispatch();\n  const navigate = useNavigate(); //Stripe\n\n  const stripe = useStripe();\n  const elements = useElements(); //useEffect\n\n  useEffect(() => {\n    if (!stripe) {\n      return;\n    }\n\n    if (!clientSecret) {\n      return;\n    }\n\n    if (success) {\n      setTimeout(() => {\n        navigate(`/orders/review/${id}`);\n      }, 3500);\n    }\n  }, [stripe, success, clientSecret, id, navigate]); //Handlers\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (!stripe || !elements) {\n      // Stripe.js has not yet loaded.\n      // Make sure to disable form submission until Stripe.js has loaded.\n      return;\n    }\n\n    setIsLoading(true); //disable redirect on confirmPayment\n\n    const {\n      error\n    } = await stripe.confirmPayment({\n      elements,\n      redirect: \"if_required\"\n    }); //Check payment status, set Order Pay on success\n\n    stripe.retrievePaymentIntent(clientSecret).then(function (response) {\n      if (response.paymentIntent && response.paymentIntent.status === \"succeeded\") {\n        setMessage(\"Payment Succeeded\");\n        setSuccess(true);\n        dispatch(payOrder(id));\n      } else {\n        setMessage(\"Something went wrong\");\n      }\n    });\n    setIsLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    id: \"payment-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n      as: \"legend\",\n      children: \"Stripe Secure Payments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PaymentElement, {\n      id: \"payment-element\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"my-3\",\n      variant: \"primary\",\n      disabled: isLoading || !stripe || !elements || success,\n      type: \"submit\",\n      children: \"Pay Here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n      id: \"payment-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CheckoutForm, \"qcMRFXcqN5AsBTznJExhLh6N9zc=\", false, function () {\n  return [useDispatch, useNavigate, useStripe, useElements];\n});\n\n_c = CheckoutForm;\nexport default CheckoutForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"sources":["C:/Users/elijr/Desktop/CODING/Personal Projects/Portfolio/eco/frontend/src/components/CheckoutForm.js"],"names":["React","useEffect","useState","Form","Button","Loader","Message","PaymentElement","useStripe","useElements","payOrder","useDispatch","useNavigate","CheckoutForm","clientSecret","id","message","setMessage","success","setSuccess","isLoading","setIsLoading","dispatch","navigate","stripe","elements","setTimeout","handleSubmit","e","preventDefault","error","confirmPayment","redirect","retrievePaymentIntent","then","response","paymentIntent","status"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport Loader from \"./Loader\";\r\nimport Message from \"./Message\";\r\nimport {\r\n  PaymentElement,\r\n  useStripe,\r\n  useElements,\r\n} from \"@stripe/react-stripe-js\";\r\nimport { payOrder } from \"../actions/orderActions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst CheckoutForm = ({ clientSecret, id }) => {\r\n  //Hooks\r\n  const [message, setMessage] = useState(null);\r\n  const [success, setSuccess] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  //Stripe\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  //useEffect\r\n  useEffect(() => {\r\n    if (!stripe) {\r\n      return;\r\n    }\r\n    if (!clientSecret) {\r\n      return;\r\n    }\r\n\r\n    if (success) {\r\n      setTimeout(() => {\r\n        navigate(`/orders/review/${id}`);\r\n      }, 3500);\r\n    }\r\n  }, [stripe, success, clientSecret, id, navigate]);\r\n\r\n  //Handlers\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!stripe || !elements) {\r\n      // Stripe.js has not yet loaded.\r\n      // Make sure to disable form submission until Stripe.js has loaded.\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    //disable redirect on confirmPayment\r\n    const { error } = await stripe.confirmPayment({\r\n      elements,\r\n      redirect: \"if_required\",\r\n    });\r\n\r\n    //Check payment status, set Order Pay on success\r\n    stripe.retrievePaymentIntent(clientSecret).then(function (response) {\r\n      if (\r\n        response.paymentIntent &&\r\n        response.paymentIntent.status === \"succeeded\"\r\n      ) {\r\n        setMessage(\"Payment Succeeded\");\r\n        setSuccess(true);\r\n        dispatch(payOrder(id));\r\n      } else {\r\n        setMessage(\"Something went wrong\");\r\n      }\r\n    });\r\n\r\n    setIsLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Form id=\"payment-form\" onSubmit={handleSubmit}>\r\n      <Form.Label as=\"legend\">Stripe Secure Payments</Form.Label>\r\n      <hr />\r\n      <PaymentElement id=\"payment-element\" />\r\n      <Button\r\n        className=\"my-3\"\r\n        variant=\"primary\"\r\n        disabled={isLoading || !stripe || !elements || success}\r\n        type=\"submit\"\r\n      >\r\n        Pay Here\r\n      </Button>\r\n      {isLoading && <Loader />}\r\n      {message && <Message id=\"payment-message\">{message}</Message>}\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default CheckoutForm;\r\n"]},"metadata":{},"sourceType":"module"}